{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/util/_ensure_test.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\n\nimport { test, assert } from \"tests\";\nimport * as ensure from \"./ensure.js\";\n\ninterface NodeError extends Error {\n\tstack: string;\n}\n\nexport default test(({ describe, it }) => {\n\n\tdescribe(\"condition checking\", ({ describe, it }) => {\n\n\t\tit(\"checks if condition is true\", () => {\n\t\t\tconst that = wrap(ensure.that);\n\n\t\t\tassert.noException(that(true));\n\t\t\tassertEnsureError(that(false), /Expected condition to be true/);\n\t\t\tassertEnsureError(that(false, \"a message\"), /a message/);\n\t\t\tassertEnsureError(that(\"foo\"), /Expected condition to be true or false/);\n\t\t\tassertEnsureError(that(\"foo\", \"ignored\"), /Expected condition to be true or false/);\n\t\t});\n\n\t\tit(\"fails when unreachable code is executed\", () => {\n\t\t\tconst unreachable = wrap(ensure.unreachable);\n\n\t\t\tassertEnsureError(unreachable(), /Unreachable code executed/);\n\t\t\tassertEnsureError(unreachable(\"foo\"), /foo/);\n\t\t});\n\n\t});\n\n\tdescribe(\"signature checking\", ({ describe, it }) => {\n\n\t\tconst signature = wrap(ensure.signature);\n\t\tconst signatureMinimum = wrap(ensure.signatureMinimum);\n\n\t\tit(\"checks no arguments\", () => {\n\t\t\tassert.noException(signature([]));\n\t\t\tassertEnsureError(signature([ \"foo\" ]), /Function called with too many arguments: expected 0 but got 1/);\n\t\t});\n\n\t\tit(\"checks one argument\", () => {\n\t\t\tassert.noException(signature([ \"foo\" ], [ String ]));\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ \"foo\", \"bar\" ], [ String ]),\n\t\t\t\t/Function called with too many arguments: expected 1 but got 2/,\n\t\t\t\t\"# of arguments\"\n\t\t\t);\n\t\t\tassertEnsureError(signature([ 42 ], [ String ]), /Argument #1 must be a string, but it was a number/, \"invalid\");\n\t\t});\n\n\t\tit(\"checks multiple arguments\", () => {\n\t\t\tassert.noException(signature([ \"foo\", \"bar\", \"baz\" ], [ String, String, String ]));\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ \"foo\", \"bar\", \"baz\" ], [ String, String]),\n\t\t\t\t/Function called with too many arguments: expected 2 but got 3/,\n\t\t\t\t\"# of arguments\"\n\t\t\t);\n\t\t\tassertEnsureError(\n\t\t\t\tsignature( [ \"foo\", 42, 36 ], [ String, String, String ]),\n\t\t\t\t/Argument #2 must be a string, but it was a number/,\n\t\t\t\t\"fails on first wrong parameter\"\n\t\t\t);\n\t\t});\n\n\t\tit(\"supports custom names\", () => {\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ 1, 2, 3 ], [ Number, String, Number ], [ \"a\", \"b\", \"c\" ]),\n\t\t\t\t/b must be a string, but it was a number/,\n\t\t\t\t\"all names specified\"\n\t\t\t);\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ 1, 2, 3 ], [ Number, String, Number ], [ \"a\" ]),\n\t\t\t\t/Argument #2 must be a string, but it was a number/,\n\t\t\t\t\"falls back to generic names if some names not specified\"\n\t\t\t);\n\t\t});\n\n\t\tit(\"signatureMinimum allows extra keys in object signatures\", () => {\n\t\t\tassert.noException(\n\t\t\t\tsignatureMinimum([ { requiredParm: true, extraParm: true } ], [ { requiredParm: Boolean } ])\n\t\t\t);\n\t\t});\n\n\t\tit(\"signatureMinimum allows extra parameters\", () => {\n\t\t\tassert.noException(signatureMinimum([ 1, 2 ], [ Number ]));\n\t\t});\n\n\t\tit(\"supports built-in types\", () => {\n\t\t\tassert.noException(signature([ false ], [ Boolean ]));\n\t\t\tassertEnsureError(signature([ false ], [ String ]));\n\n\t\t\tassert.noException(signature([ \"1\" ], [ String ]));\n\t\t\tassertEnsureError(signature([ \"1\" ], [ Number ]));\n\n\t\t\tassert.noException(signature([ 1 ], [ Number ]));\n\t\t\tassertEnsureError(signature([ 1 ], [ Function ]));\n\n\t\t\tassert.noException(signature([ function() {} ], [ Function ]));\n\t\t\tassertEnsureError(signature([ function() {} ], [ Object ]));\n\n\t\t\tassert.noException(signature([ {} ], [ Object ]));\n\t\t\tassertEnsureError(signature([ {} ], [ Array ]));\n\n\t\t\tassert.noException(signature([ [] ], [ Array ]));\n\t\t\tassertEnsureError(signature([ [] ], [ RegExp ]));\n\n\t\t\tassert.noException(signature([ /foo/ ], [ RegExp ]));\n\t\t\tassertEnsureError(signature([ /foo/ ], [ Boolean ]));\n\t\t});\n\n\t\tit(\"supports weird types (primarily for allowing nullable objects, etc.)\", () => {\n\t\t\tassert.noException(signature([ undefined ], [ undefined ]));\n\t\t\tassertEnsureError(signature([ undefined ], [ null ]), /Argument #1 must be null, but it was undefined/);\n\n\t\t\tassert.noException(signature([ null ], [ null ]));\n\t\t\tassertEnsureError(signature([ null ], [ NaN ]), /Argument #1 must be NaN, but it was null/);\n\n\t\t\tassert.noException(signature([ NaN ], [ NaN ]));\n\t\t\tassertEnsureError(signature([ NaN ], [ undefined ]), /Argument #1 must be undefined, but it was NaN/);\n\t\t});\n\n\t\tit(\"supports custom types\", () => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst MyClass = function MyClass() {} as any;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst NoName = function() {} as any;\n\t\t\tdelete NoName.name;\n\n\t\t\tassert.noException(signature([ new MyClass() ], [ MyClass ]));\n\t\t\tassert.noException(signature([ new NoName() ], [ NoName ]));\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ {} ], [ MyClass ]),\n\t\t\t\t/Argument #1 must be a MyClass instance, but it was an object/,\n\t\t\t\t\"invalid MyClass\"\n\t\t\t);\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ {} ], [ NoName ]),\n\t\t\t\t/Argument #1 must be an <anon> instance, but it was an object/,\n\t\t\t\t\"invalid anon class\"\n\t\t\t);\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ new NoName() ], [ MyClass ]),\n\t\t\t\t/Argument #1 must be a MyClass instance, but it was an <anon> instance/,\n\t\t\t\t\"invalid anon instance\"\n\t\t\t);\n\t\t});\n\n\t\tit(\"supports multiple types\", () => {\n\t\t\tassert.noException(signature([ 1 ], [[ String, Number ]]));\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ 1 ], [ [ String, Boolean, function MyClass() {} ] ]),\n\t\t\t\t/Argument #1 must be a string, a boolean, or a MyClass instance, but it was a number/,\n\t\t\t\t\"invalid\"\n\t\t\t);\n\t\t});\n\n\t\tit(\"allows optional arguments\", () => {\n\t\t\tassert.noException(signature([ 1 ], [ Number, [ undefined, String ] ]));\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([], [ Number ]),\n\t\t\t\t/Argument #1 must be a number, but it was undefined/,\n\t\t\t\t\"required parameter\"\n\t\t\t);\n\n\t\t\tassert.noException(signature([ {} ], [ [undefined, Object] ]));\n\n\t\t\tassertEnsureError(\n\t\t\t\tsignature([ \"foo\" ], [ [undefined, Object] ]),\n\t\t\t\t/Argument #1 must be undefined or an object, but it was a string/,\n\t\t\t\t\"optional parameter filled in with wrong type\"\n\t\t\t);\n\t\t});\n\n\t});\n\n\tdescribe(\"type checking\", ({ describe, it }) => {\n\n\t\tit(\"checks if variable is defined\", () => {\n\t\t\tconst defined = wrap(ensure.defined);\n\n\t\t\tassert.noException(defined(\"foo\"));\n\t\t\tassert.noException(defined(null));\n\t\t\tassertEnsureError(defined(undefined), /variable was not defined/);\n\t\t\tassertEnsureError(defined(undefined, \"myVariable\"), /myVariable was not defined/);\n\t\t});\n\n\t\tit(\"checks if variable is a particular type\", () => {\n\t\t\tconst type = wrap(ensure.type);\n\t\t\tassertEnsureError(type(\"string\", Number, \"const name\"), /const name must be a number, but it was a string/);\n\t\t});\n\n\t\tit(\"type checking supports extra keys in object signatures\", () => {\n\t\t\tassert.noException(\n\t\t\t\t() => ensure.typeMinimum({ requiredParm: true, extraParm: true }, { requiredParm: Boolean })\n\t\t\t);\n\t\t});\n\n\t});\n\n});\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction wrap<T extends Function>(fn: T): (...args: unknown[]) => T {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn <any>function() {\n\t\tconst outerArgs = arguments;\n\t\treturn function() {\n\t\t\tfn.apply(null, outerArgs);\n\t\t};\n\t};\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction assertEnsureError(fn: Function, expectedRegexOrExactString?: RegExp | string, message?: string) {\n\ttry {\n\t\tfn();\n\t\tassert.fail(\"Expected exception\");\n\t}\n\tcatch (err) {\n\t\tconst typedErr = err as NodeError;\n\n\t\tif (expectedRegexOrExactString === undefined) return;\n\t\tif (typeof expectedRegexOrExactString === \"string\") {\n\t\t\tassert.equal(typedErr.message, expectedRegexOrExactString, message);\n\t\t}\n\t\telse {\n\t\t\tassert.match(typedErr.message, expectedRegexOrExactString, message);\n\t\t}\n\t\tassert.notIncludes(typedErr.stack, \"ensure.js\", \"should filter stack trace\");\n\t\treturn;\n\t}\n}\n"],"names":["test","assert","ensure","describe","it","that","wrap","noException","assertEnsureError","unreachable","signature","signatureMinimum","String","Number","requiredParm","extraParm","Boolean","Function","Object","Array","RegExp","undefined","NaN","MyClass","NoName","name","defined","type","typeMinimum","fn","outerArgs","arguments","apply","expectedRegexOrExactString","message","fail","err","typedErr","equal","match","notIncludes","stack"],"mappings":"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"}