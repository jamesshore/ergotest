{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/util/type.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\n\nexport interface TypeOptions {\n\tname?: string;\n\tallowExtraKeys?: boolean;\n}\n\nexport interface DescribeOptions {\n\tarticles?: boolean;\n\tatLeast?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\ntype SingleDescriptor = undefined | null | typeof NaN | Function;   // Descriptor can have any function as constructor\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\ninterface StructDescriptor extends Record<string, TypeDescriptor> {}  // required for circularity\n\nexport type TypeDescriptor = SingleDescriptor | TypeDescriptor[] | StructDescriptor;\n\nexport const ANY_TYPE = [ undefined, null, Boolean, Number, NaN, String, Array, Object ];\n\nexport function check(arg: unknown, expectedTypes: TypeDescriptor, options?: TypeOptions): string | null {\n\tconst argType = getType(arg);\n\tif (!Array.isArray(expectedTypes)) expectedTypes = [ expectedTypes ];\n\toptions = options || {};\n\toptions.name = options.name || \"argument\";\n\n\tfor (let i = 0; i < expectedTypes.length; i++) {\n\t\tif (oneTypeMatches(arg, argType, expectedTypes[i])) {\n\t\t\tif (isStructComparison(argType, expectedTypes[i])) {\n\t\t\t\treturn checkStruct(arg as Record<string, unknown>, expectedTypes[i] as StructDescriptor, options);\n\t\t\t}\n\t\t\telse return null;\n\t\t}\n\t}\n\treturn describeError(arg, argType, expectedTypes, options.name, options.allowExtraKeys);\n\n\n\tfunction oneTypeMatches(arg: unknown, argType: TypeDescriptor, expectedType: TypeDescriptor) {\n\t\tif (argType === Object) return checkObject(arg, expectedType);\n\t\telse if (Number.isNaN(argType)) return Number.isNaN(expectedType);\n\t\telse return argType === expectedType;\n\n\t\tfunction checkObject(arg: unknown, type: TypeDescriptor) {\n\t\t\tif (type === null) return false;\n\t\t\telse if (typeof type === \"function\") return arg instanceof type;\n\t\t\telse if (typeof type === \"object\") return typeof arg === \"object\";\n\t\t\telse return false;\n\t\t}\n\t}\n\n\tfunction isStructComparison(argType: TypeDescriptor, type: TypeDescriptor) {\n\t\treturn argType === Object && typeof type === \"object\";\n\t}\n\n\tfunction checkStruct(arg: Record<string, unknown>, type: StructDescriptor, options: TypeOptions) {\n\t\tif (typeof type !== \"object\") throw new Error(\"unrecognized type: \" + type);\n\n\t\tconst unmatched = Object.assign({}, arg);\n\t\tconst keys = Object.getOwnPropertyNames(type);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst newOptions = Object.assign({}, options);\n\t\t\tconst key = keys[i]!;\n\t\t\tnewOptions.name = options.name + \".\" + key;\n\t\t\tconst checkResult = check(arg[key], type[key], newOptions);\n\t\t\tif (checkResult !== null) return checkResult;\n\t\t\tdelete unmatched[key];\n\t\t}\n\t\tif (!options.allowExtraKeys) {\n\t\t\tconst unmatchedKeys = Object.keys(unmatched);\n\t\t\tconst s = unmatchedKeys.length > 1 ? \"s\" : \"\";\n\t\t\tif (unmatchedKeys.length > 0) return `${options.name} had unexpected parameter${s}: ${unmatchedKeys.join(\", \")}`;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction describeError(\n\t\targ: unknown,\n\t\targType: TypeDescriptor,\n\t\ttype: TypeDescriptor,\n\t\tname: string,\n\t\tallowExtraKeys?: boolean,\n\t) {\n\t\tconst options = { articles: true, atLeast: allowExtraKeys };\n\t\tif (argType === Object && !isStruct(arg)) argType = arg as typeof Object;\n\t\treturn name + \" must be \" + describe(type, options) + \", but it was \" + describe(argType, options);\n\t}\n\n}\n\n\nexport function describe(type: TypeDescriptor, options: DescribeOptions = {}): string {\n\tif (!Array.isArray(type)) type = [ type ];\n\n\tconst descriptions = type.map(function(oneType) {\n\t\treturn describeOneType(oneType);\n\t});\n\n\t// This is a ridiculous bit of perfectionism\n\tif (descriptions.length <= 2) {\n\t\treturn descriptions.join(\" or \");\n\t}\n\telse {\n\t\tconst beginning = descriptions.slice(0, -1).join(\", \");\n\t\treturn `${beginning}, or ${descriptions.slice(-1)}`;\n\t}\n\n\tfunction describeOneType(type: TypeDescriptor) {\n\t\tswitch(type) {\n\t\t\tcase Boolean: return options!.articles ? \"a boolean\" : \"boolean\";\n\t\t\tcase String: return options!.articles ? \"a string\" : \"string\";\n\t\t\tcase Number: return options!.articles ? \"a number\" : \"number\";\n\t\t\tcase Function: return options!.articles ? \"a function\" : \"function\";\n\t\t\tcase Array: return options!.articles ? \"an array\" : \"array\";\n\t\t\tcase undefined: return \"undefined\";\n\t\t\tcase null: return \"null\";\n\n\t\t\tdefault:\n\t\t\t\tif (Number.isNaN(type)) return \"NaN\";\n\t\t\t\telse if (typeof type === \"function\") return describeConstructor(type, options);\n\t\t\t\telse if (typeof type === \"object\") {\n\t\t\t\t\tif (isStruct(type)) return describeStruct(type as StructDescriptor, options);\n\t\t\t\t\telse return describeInstance(type, options);\n\t\t\t\t}\n\t\t\t\telse throw new Error(\"unrecognized type: \" + type);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n\tfunction describeConstructor(type: Function, options: DescribeOptions) {  // can literally be any function\n\t\tconst articles = options.articles;\n\n\t\tif (type === Object) return articles ? \"an object\" : \"object\";\n\t\telse if (type === RegExp) return articles ? \"a regular expression\" : \"regular expression\";\n\n\t\tlet name = type.name;\n\t\tif (name) {\n\t\t\tif (articles) name = \"a \" + name;\n\t\t}\n\t\telse {\n\t\t\tname = articles ? \"an <anon>\" : \"<anon>\";\n\t\t}\n\t\treturn name + \" instance\";\n\t}\n\n\tfunction describeStruct(type: StructDescriptor, options: DescribeOptions) {\n\t\tconst properties = Object.getOwnPropertyNames(type).map(function(key) {\n\t\t\treturn key + \": <\" + describe(type[key]) + \">\";\n\t\t});\n\n\t\tconst objectDesc = options.articles ? \"an object\" : \"object\";\n\t\tif (properties.length === 0) {\n\t\t\treturn objectDesc;\n\t\t}\n\n\t\tconst atLeast = options.atLeast ? \"at least \" : \"\";\n\t\treturn objectDesc + ` containing ${atLeast}{ ${properties.join(\", \")} }`;\n\t}\n\n\tfunction describeInstance(type: object, options: DescribeOptions) {\n\t\tconst prototypeConstructor = Object.getPrototypeOf(type).constructor;\n\t\tconst article = options.articles;\n\t\tlet name = (article ? \"a \" : \"\") + prototypeConstructor.name;\n\t\tif (!prototypeConstructor.name) name = (article ? \"an \" : \"\") + \"<anon>\";\n\n\t\treturn name + \" instance\";\n\t}\n\n}\n\nfunction getType(variable: unknown): SingleDescriptor {\n\tif (variable === null) return null;\n\tif (Array.isArray(variable)) return Array;\n\tif (Number.isNaN(variable)) return NaN;\n\n\tswitch (typeof variable) {\n\t\tcase \"boolean\": return Boolean;\n\t\tcase \"string\": return String;\n\t\tcase \"number\": return Number;\n\t\tcase \"function\": return Function;\n\t\tcase \"object\": return Object;\n\t\tcase \"undefined\": return undefined;\n\n\t\tdefault:\n\t\t\tthrow new Error(\"Unreachable code executed. Unknown typeof value: \" + typeof variable);\n\t}\n}\n\nfunction isStruct(type: unknown): boolean {\n\tconst prototype = Object.getPrototypeOf(type);\n\treturn (!prototype || prototype.constructor === Object);\n}\n"],"names":["ANY_TYPE","undefined","Boolean","Number","NaN","String","Array","Object","check","arg","expectedTypes","options","argType","getType","isArray","name","i","length","oneTypeMatches","isStructComparison","checkStruct","describeError","allowExtraKeys","expectedType","checkObject","isNaN","type","Error","unmatched","assign","keys","getOwnPropertyNames","newOptions","key","checkResult","unmatchedKeys","s","join","articles","atLeast","isStruct","describe","descriptions","map","oneType","describeOneType","beginning","slice","Function","describeConstructor","describeStruct","describeInstance","RegExp","properties","objectDesc","prototypeConstructor","getPrototypeOf","constructor","article","variable","prototype"],"mappings":"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"}