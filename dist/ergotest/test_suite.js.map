{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/test_suite.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\n\nimport * as ensure from \"../util/ensure.js\";\nimport { Clock } from \"../infrastructure/clock.js\";\nimport {\n\tRenderErrorFn, RunResult,\n\tTestCaseResult,\n\tTestMark,\n\tTestMarkValue,\n\tTestResult,\n\tTestStatus,\n\tTestSuiteResult,\n} from \"./test_result.js\";\nimport path from \"node:path\";\n\nconst DEFAULT_TIMEOUT_IN_MS = 2000;\n\nexport interface TestConfig {\n\t[name: string]: unknown,\n}\n\nexport interface TestOptions {\n\ttimeout?: Milliseconds,\n\tconfig?: TestConfig,\n\tonTestCaseResult?: (testCaseResult: TestCaseResult) => void,\n\trenderer?: string,\n\tclock?: Clock,\n}\n\nexport interface DescribeOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport interface ItOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport type DescribeFn = () => void;\n\nexport type ItFn = (testUtilities: TestParameters) => Promise<void> | void;\n\ntype BeforeAfter = (optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) => void;\n\ntype BeforeAfterDefinition = { name?: string[], options: ItOptions, fnAsync: ItFn };\n\ninterface TestParameters {\n\tgetConfig: <T>(key: string) => T,\n}\n\ntype Milliseconds = number;\n\ninterface RecursiveRunOptions {\n\tname: string[];\n\tfilename?: string;\n\tclock: Clock,\n\tonTestCaseResult: (testResult: TestCaseResult) => void,\n\ttimeout: Milliseconds,\n\tconfig: TestConfig,\n\trenderError?: RenderErrorFn,\n}\n\ninterface Test {\n\t_recursiveRunAsync: (\n\t\tparentMark: TestMarkValue,\n\t\tparentBeforeEachFns: BeforeAfterDefinition[],\n\t\tparentAfterEachFns: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t) => Promise<TestResult> | TestResult;\n\t_isDotOnly: () => boolean,\n\t_isSkipped: (mark: TestMarkValue) => boolean,\n}\n\nexport interface TestContext {\n\tdescribe(\n\t\toptionalName: string | DescribeOptions | DescribeFn | undefined,\n\t\toptionalOptions: DescribeOptions | DescribeFn | undefined,\n\t\tdescribeFn: DescribeFn | undefined,\n\t\tmark: TestMarkValue,\n\t): TestSuite,\n\tit(\n\t\tname: string,\n\t\toptionalOptions: ItOptions | ItFn | undefined,\n\t\titFn: ItFn | undefined,\n\t\tmark: TestMarkValue,\n\t): void;\n\tbeforeAll: BeforeAfter,\n\tafterAll: BeforeAfter,\n\tbeforeEach: BeforeAfter,\n\tafterEach: BeforeAfter,\n}\n\n/**\n * A simple but full-featured test runner.\n */\nexport class TestSuite implements Test {\n\n\tprivate _name: string;\n\tprivate _mark: TestMarkValue;\n\tprivate _tests: Test[];\n\tprivate _hasDotOnlyChildren: boolean;\n\tprivate _allChildrenSkipped: boolean;\n\tprivate _beforeAll: BeforeAfterDefinition[];\n\tprivate _afterAll: BeforeAfterDefinition[];\n\tprivate _beforeEach: BeforeAfterDefinition[];\n\tprivate _afterEach: BeforeAfterDefinition[];\n\tprivate _timeout?: Milliseconds;\n\tprivate _filename?: string;\n\n\tstatic get DEFAULT_TIMEOUT_IN_MS() {\n\t\treturn DEFAULT_TIMEOUT_IN_MS;\n\t}\n\n\t/**\n\t * Convert a list of test modules into a test suite. Each module needs to export a test suite by using\n\t * {@link TestSuite.create}.\n\t * @param {string[]} moduleFilenames The filenames of the test modules.\n\t * @returns {TestSuite} The test suite.\n\t */\n\tstatic async fromModulesAsync(moduleFilenames: string[]): Promise<TestSuite> {\n\t\tensure.signature(arguments, [ Array ]);\n\n\t\tconst suites = await Promise.all(moduleFilenames.map(filename => loadModuleAsync(filename)));\n\t\treturn new TestSuite(\"\", TestMark.none, { tests: suites });\n\n\t\tasync function loadModuleAsync(filename: string): Promise<TestSuite> {\n\t\t\tconst errorName = `error when importing ${path.basename(filename)}`;\n\n\t\t\tif (!path.isAbsolute(filename)) {\n\t\t\t\treturn createFailure(errorName, `Test module filenames must use absolute paths: ${filename}`);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst { default: suite } = await import(filename);\n\t\t\t\tif (suite instanceof TestSuite) {\n\t\t\t\t\tsuite._setFilename(filename);\n\t\t\t\t\treturn suite;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn createFailure(errorName, `Test module doesn't export a test suite: ${filename}`, filename);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(err) {\n\t\t\t\tconst code = (err as { code: string })?.code;\n\t\t\t\tif (code === \"ERR_MODULE_NOT_FOUND\") {\n\t\t\t\t\treturn createFailure(errorName, `Test module not found: ${filename}`, filename);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn createFailure(errorName, err, filename);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createFailure(name: string, error: unknown, filename?: string) {\n\t\t\treturn new TestSuite(\"\", TestMark.none, { tests: [ new FailureTestCase(name, error, filename) ] });\n\t\t}\n\t}\n\n\t/** Internal use only. */\n\tstatic create(\n\t\tnameOrOptionsOrDescribeFn: string | DescribeOptions | DescribeFn | undefined,\n\t\toptionsOrDescribeFn: DescribeOptions | DescribeFn | undefined,\n\t\tpossibleDescribeFn: DescribeFn | undefined,\n\t\tmark: TestMarkValue,\n\t\ttestContext: TestContext[],\n\t): TestSuite {\n\t\tconst DescribeOptionsType = { timeout: Number };\n\t\tensure.signature(arguments, [\n\t\t\t[ undefined, DescribeOptionsType, String, Function ],\n\t\t\t[ undefined, DescribeOptionsType, Function ],\n\t\t\t[ undefined, Function ],\n\t\t\tString,\n\t\t\tArray,\n\t\t]);\n\n\t\tconst { name, options, fn } = decipherOverloadedParameters();\n\n\t\tif (fn !== undefined) {\n\t\t\treturn this.#runDescribeFunction(fn, name, mark, testContext, options.timeout);\n\t\t}\n\t\telse if (mark === TestMark.only) {\n\t\t\treturn new TestSuite(name, mark, {\n\t\t\t\ttests: [ new FailureTestCase(name, \"Test suite is marked '.only', but it has no body\") ],\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\treturn new TestSuite(name, TestMark.skip, { timeout: options.timeout });\n\t\t}\n\n\t\tfunction decipherOverloadedParameters() {\n\t\t\tlet name: string;\n\t\t\tlet options: DescribeOptions | undefined;\n\t\t\tlet fn: DescribeFn | undefined;\n\n\t\t\tswitch (typeof nameOrOptionsOrDescribeFn) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tname = nameOrOptionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"object\":\n\t\t\t\t\toptions = nameOrOptionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tfn = nameOrOptionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"undefined\":\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tensure.unreachable(`Unknown typeof for nameOrOptionsOrSuiteFn: ${typeof nameOrOptionsOrDescribeFn}`);\n\t\t\t}\n\t\t\tswitch (typeof optionsOrDescribeFn) {\n\t\t\t\tcase \"object\":\n\t\t\t\t\tensure.that(options === undefined, \"Received two options parameters\");\n\t\t\t\t\toptions = optionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tensure.that(fn === undefined, \"Received two suite function parameters\");\n\t\t\t\t\tfn = optionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"undefined\":\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tensure.unreachable(`Unknown typeof for optionsOrSuiteFn: ${typeof optionsOrDescribeFn}`);\n\t\t\t}\n\t\t\tif (possibleDescribeFn !== undefined) {\n\t\t\t\tensure.that(fn === undefined, \"Received two suite function parameters\");\n\t\t\t\tfn = possibleDescribeFn;\n\t\t\t}\n\n\t\t\tname ??= \"\";\n\t\t\toptions ??= {};\n\n\t\t\treturn { name, options, fn };\n\t\t}\n\t}\n\n\tstatic #runDescribeFunction(\n\t\tdescribeFn: DescribeFn,\n\t\tname: string,\n\t\tmark: TestMarkValue,\n\t\ttestContext: TestContext[],\n\t\ttimeout?: Milliseconds,\n\t): TestSuite {\n\t\tconst tests: Test[] = [];\n\t\tconst beforeAll: BeforeAfterDefinition[] = [];\n\t\tconst afterAll: BeforeAfterDefinition[] = [];\n\t\tconst beforeEach: BeforeAfterDefinition[] = [];\n\t\tconst afterEach: BeforeAfterDefinition[] = [];\n\n\t\ttestContext.push({\n\t\t\tdescribe(optionalName, optionalOptions, fn, mark) {\n\t\t\t\tconst suite = TestSuite.create(optionalName, optionalOptions, fn, mark, testContext);\n\t\t\t\ttests.push(suite);\n\t\t\t\treturn suite;\n\t\t\t},\n\t\t\tit(name, optionalOptions, testCaseFn, mark) {\n\t\t\t\ttests.push(TestCase.create(name, optionalOptions, testCaseFn, mark));\n\t\t\t},\n\t\t\tbeforeAll: defineBeforeAfterFn(beforeAll),\n\t\t\tafterAll: defineBeforeAfterFn(afterAll),\n\t\t\tbeforeEach: defineBeforeAfterFn(beforeEach),\n\t\t\tafterEach: defineBeforeAfterFn(afterEach),\n\t\t});\n\n\t\ttry {\n\t\t\tdescribeFn();\n\t\t}\n\t\tfinally {\n\t\t\ttestContext.pop();\n\t\t}\n\n\t\treturn new TestSuite(name, mark, { tests, beforeAll, afterAll, beforeEach, afterEach, timeout });\n\n\t\tfunction defineBeforeAfterFn(beforeAfterArray: BeforeAfterDefinition[]) {\n\t\t\treturn function (optionsOrFnAsync: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\t\t\t\tensure.signature(arguments, [\n\t\t\t\t\t[ { timeout: Number }, Function ],\n\t\t\t\t\t[ undefined, Function ],\n\t\t\t\t]);\n\n\t\t\t\tlet options: ItOptions;\n\t\t\t\tlet fnAsync: ItFn;\n\n\t\t\t\tif (possibleFnAsync === undefined) {\n\t\t\t\t\toptions = {};\n\t\t\t\t\tfnAsync = optionsOrFnAsync as ItFn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toptions = optionsOrFnAsync as ItOptions;\n\t\t\t\t\tfnAsync = possibleFnAsync;\n\t\t\t\t}\n\n\t\t\t\tbeforeAfterArray.push({ options, fnAsync });\n\t\t\t};\n\t\t}\n\t}\n\n\t/** Internal use only. (Use {@link describe} or {@link TestSuite.fromModulesAsync} instead.) */\n\tconstructor(name: string, mark: TestMarkValue, {\n\t\ttests = [],\n\t\tbeforeAll = [],\n\t\tafterAll = [],\n\t\tbeforeEach = [],\n\t\tafterEach = [],\n\t\ttimeout,\n\t}: {\n\t\ttests?: Test[],\n\t\tbeforeAll?: BeforeAfterDefinition[],\n\t\tafterAll?: BeforeAfterDefinition[],\n\t\tbeforeEach?: BeforeAfterDefinition[],\n\t\tafterEach?: BeforeAfterDefinition[],\n\t\ttimeout?: Milliseconds,\n\t}) {\n\t\tthis._name = name;\n\t\tthis._mark = mark;\n\t\tthis._tests = tests;\n\t\tthis._hasDotOnlyChildren = this._tests.some(test => test._isDotOnly());\n\t\tthis._allChildrenSkipped = this._tests.every(test => test._isSkipped(this._mark));\n\t\tthis._beforeAll = beforeAll;\n\t\tthis._afterAll = afterAll;\n\t\tthis._beforeEach = beforeEach;\n\t\tthis._afterEach = afterEach;\n\t\tthis._timeout = timeout;\n\t}\n\n\t/**\n\t * Run the tests in this suite.\n\t * @param {number} [timeout] Default timeout in milliseconds.\n\t * @param {object} [config={}] Configuration data to provide to tests.\n\t * @param {(result: TestResult) => ()} [onTestCaseResult] A function to call each time a test completes. The `result`\n\t *   parameter describes the result of the test—whether it passed, failed, etc.\n\t * @param {string} [renderer] Path to a module that exports a `renderError()` function with the signature `(name:\n\t *   string, error: unknown, mark: TestMarkValue, filename?: string) => unknown`. The path must be an absolute path\n\t *   or a module that exists in `node_modules`. The `renderError()` function will be called when a test fails and the\n\t *   return value will be placed into the test result as {@link TestResult.errorRender}.\n\t * @param {Clock} [clock] Internal use only.\n\t * @returns {Promise<TestSuiteResult>} The results of the test suite.\n\t */\n\tasync runAsync({\n\t\ttimeout = DEFAULT_TIMEOUT_IN_MS,\n\t\tconfig = {},\n\t\tonTestCaseResult = () => {},\n\t\trenderer,\n\t\tclock = Clock.create(),\n\t}: TestOptions = {}): Promise<TestSuiteResult> {\n\t\tensure.signature(arguments, [[ undefined, {\n\t\t\ttimeout: [ undefined, Number ],\n\t\t\tconfig: [ undefined, Object ],\n\t\t\tonTestCaseResult: [ undefined, Function ],\n\t\t\trenderer: [ undefined, String ],\n\t\t\tclock: [ undefined, Clock ],\n\t\t}]]);\n\n\t\treturn await this._recursiveRunAsync(TestMark.only, [], [], {\n\t\t\tclock,\n\t\t\tconfig,\n\t\t\tonTestCaseResult,\n\t\t\tname: [],\n\t\t\tfilename: this._filename,\n\t\t\ttimeout: this._timeout ?? timeout ?? DEFAULT_TIMEOUT_IN_MS,\n\t\t\trenderError: await importRendererAsync(renderer),\n\t\t});\n\t}\n\n\t/** @private */\n\t_setFilename(filename: string) { this._filename = filename; }\n\n\t/** @private */\n\t_isDotOnly(): boolean {\n\t\treturn this._mark === TestMark.only || this._hasDotOnlyChildren;\n\t}\n\n\t/** @private */\n\t_isSkipped(): boolean {\n\t\treturn this._allChildrenSkipped;\n\t}\n\n\t/** @private */\n\tasync _recursiveRunAsync(\n\t\tparentMark: TestMarkValue,\n\t\tparentBeforeEach: BeforeAfterDefinition[],\n\t\tparentAfterEach: BeforeAfterDefinition[],\n\t\trunOptions: RecursiveRunOptions,\n\t) {\n\t\trunOptions = {\n\t\t\t...runOptions,\n\t\t\tname: [ ...runOptions.name ],\n\t\t\tfilename: this._filename ?? runOptions.filename,\n\t\t\ttimeout: this._timeout ?? runOptions.timeout\n\t\t};\n\t\tif (this._name !== \"\") runOptions.name.push(this._name);\n\t\tconst resultOptions = { filename: runOptions.filename, mark: this._mark };\n\n\t\tconst beforeAllResults: TestCaseResult[] = [];\n\t\tlet beforeAllFailed = false;\n\t\tfor await (const before of this._beforeAll) {\n\t\t\tconst name = [ ...runOptions.name, `beforeAll() #${beforeAllResults.length + 1}`];\n\n\t\t\tconst it = this._allChildrenSkipped || beforeAllFailed\n\t\t\t\t? RunResult.skip({ name, filename: runOptions.filename })\n\t\t\t\t: await runTestFnAsync(name, before.fnAsync, before.options.timeout, runOptions);\n\t\t\tconst result = TestCaseResult.create({ it });\n\n\t\t\tif (!isSuccess(result)) beforeAllFailed = true;\n\t\t\trunOptions.onTestCaseResult(result);\n\t\t\tbeforeAllResults.push(result);\n\t\t}\n\n\n\t\tlet inheritedMark = this._mark;\n\t\tif (inheritedMark === TestMark.none) inheritedMark = parentMark;\n\t\tif (inheritedMark === TestMark.only && this._hasDotOnlyChildren) inheritedMark = TestMark.skip;\n\t\tif (beforeAllFailed) inheritedMark = TestMark.skip;\n\n\t\tthis._beforeEach.forEach((beforeEach, i) => {\n\t\t\tconst number = i === 0 ? \"\" : ` #${i + 1}`;\n\t\t\tbeforeEach.name = [ ...runOptions.name, `beforeEach()${number}` ];\n\t\t});\n\t\tthis._afterEach.forEach((afterEach, i) => {\n\t\t\tconst number = i === 0 ? \"\" : ` #${i + 1}`;\n\t\t\tafterEach.name = [ ...runOptions.name, `afterEach()${number}` ];\n\t\t});\n\n\t\tconst beforeEach = [ ...parentBeforeEach, ...this._beforeEach ];\n\t\tconst afterEach = [ ...this._afterEach, ...parentAfterEach ];\n\n\t\tconst testResults = [];\n\t\tfor await (const test of this._tests) {\n\t\t\ttestResults.push(await test._recursiveRunAsync(inheritedMark, beforeEach, afterEach, runOptions));\n\t\t}\n\n\t\tconst afterAllResults: TestCaseResult[] = [];\n\t\tfor await (const after of this._afterAll) {\n\t\t\tconst name = [ ...runOptions.name, `afterAll() #${afterAllResults.length + 1}`];\n\n\t\t\tconst it = this._allChildrenSkipped || beforeAllFailed\n\t\t\t\t? RunResult.skip({ name, filename: runOptions.filename })\n\t\t\t\t: await runTestFnAsync(name, after.fnAsync, after.options.timeout, runOptions);\n\t\t\tconst result = TestCaseResult.create({ it });\n\n\t\t\trunOptions.onTestCaseResult(result);\n\t\t\tafterAllResults.push(result);\n\t\t}\n\n\t\treturn TestSuiteResult.create({\n\t\t\tname: runOptions.name,\n\t\t\ttests: testResults,\n\t\t\tbeforeAll: beforeAllResults,\n\t\t\tafterAll: afterAllResults,\n\t\t\t...resultOptions,\n\t\t});\n\t}\n\n}\n\n\nclass TestCase implements Test {\n\n\tprotected _name: string;\n\tprivate _timeout?: Milliseconds;\n\tprivate _testFn?: ItFn;\n\tprivate _mark: TestMarkValue;\n\n\tstatic create(\n\t\tname: string,\n\t\toptionsOrTestFn: TestOptions | ItFn | undefined,\n\t\tpossibleTestFn: ItFn | undefined,\n\t\tmark: TestMarkValue,\n\t) {\n\t\tensure.signature(arguments, [\n\t\t\tString,\n\t\t\t[ undefined, { timeout: [ undefined, Number ]}, Function ],\n\t\t\t[ undefined, Function ],\n\t\t\tString\n\t\t]);\n\n\t\tlet timeout;\n\t\tlet testFn;\n\n\t\tswitch (typeof optionsOrTestFn) {\n\t\t\tcase \"object\":\n\t\t\t\ttimeout = optionsOrTestFn.timeout;\n\t\t\t\tbreak;\n\t\t\tcase \"function\":\n\t\t\t\ttestFn = optionsOrTestFn;\n\t\t\t\tbreak;\n\t\t\tcase \"undefined\":\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tensure.unreachable(`Unknown typeof optionsOrTestFn: ${typeof optionsOrTestFn}`);\n\t\t}\n\t\tif (possibleTestFn !== undefined) {\n\t\t\tensure.that(testFn === undefined, \"Received two test function parameters\");\n\t\t\ttestFn = possibleTestFn;\n\t\t}\n\n\t\treturn new TestCase(name, timeout, testFn, mark);\n\t}\n\n\tconstructor(\n\t\tname: string,\n\t\ttimeout: Milliseconds | undefined,\n\t\ttestFn: ItFn | undefined,\n\t\tmark: TestMarkValue\n\t) {\n\t\tthis._name = name;\n\t\tthis._timeout = timeout;\n\t\tthis._testFn = testFn;\n\t\tthis._mark = mark;\n\t\tif (testFn === undefined && mark === TestMark.none) this._mark = TestMark.skip;\n\t}\n\n\t/** @private */\n\t_isDotOnly(): boolean {\n\t\tensure.signature(arguments, []);\n\t\treturn this._mark === TestMark.only;\n\t}\n\n\t/** @private */\n\t_isSkipped(parentMark: TestMarkValue): boolean {\n\t\tconst inheritedMark = this._mark === TestMark.none ? parentMark : this._mark;\n\t\treturn inheritedMark === TestMark.skip || this._testFn === undefined;\n\t}\n\n\t/** @private */\n\tasync _recursiveRunAsync(\n\t\tparentMark: TestMarkValue,\n\t\tparentBeforeEach: BeforeAfterDefinition[],\n\t\tparentAfterEach: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t): Promise<TestCaseResult> {\n\t\tconst name = [ ...options.name ];\n\t\tname.push(this._name !== \"\" ? this._name : \"(unnamed)\");\n\t\toptions = { ...options, name };\n\n\t\tlet skipTest = this._isSkipped(parentMark);\n\t\tconst beforeEach = [];\n\t\tfor await (const before of parentBeforeEach) {\n\t\t\tensure.defined(before.name, \"before.name\");\n\t\t\tconst result = skipTest\n\t\t\t\t? RunResult.skip({ name: before.name!, filename: options.filename })\n\t\t\t\t: await runTestFnAsync(before.name!, before.fnAsync, before.options.timeout, options);\n\t\t\tif (!isSuccess(result)) skipTest = true;\n\t\t\tbeforeEach.push(result);\n\t\t}\n\n\t\tlet it;\n\t\tif (this._testFn === undefined && this._mark === TestMark.only) {\n\t\t\tit = RunResult.fail({\n\t\t\t\tname,\n\t\t\t\tfilename: options.filename,\n\t\t\t\terror: \"Test is marked '.only', but it has no body\",\n\t\t\t\trenderError: options.renderError,\n\t\t\t});\n\t\t}\n\t\telse if (skipTest) {\n\t\t\tit = RunResult.skip({ name: options.name, filename: options.filename });\n\t\t}\n\t\telse {\n\t\t\tit = await runTestFnAsync(options.name, this._testFn!, this._timeout, options);\n\t\t}\n\n\t\tconst afterEach = [];\n\t\tfor await (const after of parentAfterEach) {\n\t\t\tensure.defined(after.name, \"after.name\");\n\t\t\tconst result = skipTest\n\t\t\t\t? RunResult.skip({ name: after.name!, filename: options.filename })\n\t\t\t\t: await runTestFnAsync(after.name!, after.fnAsync, after.options.timeout, options);\n\t\t\tafterEach.push(result);\n\t\t}\n\n\t\tconst result = TestCaseResult.create({ mark: this._mark, beforeEach, afterEach, it });\n\n\t\toptions.onTestCaseResult(result);\n\t\treturn result;\n\t}\n}\n\n\nclass FailureTestCase extends TestCase {\n\n\tprivate _filename?: string;\n\tprivate _error: unknown;\n\n\tconstructor(name: string, error: unknown, filename?: string) {\n\t\tsuper(name, undefined, undefined, TestMark.none);\n\n\t\tthis._filename = filename;\n\t\tthis._error = error;\n\t}\n\n\toverride async _recursiveRunAsync(\n\t\tparentMark: TestMarkValue,\n\t\tbeforeEachFns: BeforeAfterDefinition[],\n\t\tafterEachFns: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t): Promise<TestCaseResult> {\n\t\tconst it = RunResult.fail({\n\t\t\tname: this._name,\n\t\t\tfilename: this._filename,\n\t\t\terror: this._error,\n\t\t\trenderError: options.renderError,\n\t\t});\n\t\tconst result = TestCaseResult.create({ mark: TestMark.none, it });\n\n\t\toptions.onTestCaseResult(result);\n\t\treturn await result;\n\t}\n\n}\n\n\nasync function runTestFnAsync(\n\tname: string[],\n\tfn: ItFn,\n\ttestTimeout: Milliseconds | undefined,\n\t{ clock, filename, timeout, config, renderError }: RecursiveRunOptions,\n): Promise<RunResult> {\n\tconst getConfig = <T>(name: string) => {\n\t\tif (config[name] === undefined) throw new Error(`No test config found for name '${name}'`);\n\t\treturn config[name] as T;\n\t};\n\n\ttimeout = testTimeout ?? timeout;\n\n\treturn await clock.timeoutAsync(timeout, async () => {\n\t\ttry {\n\t\t\tawait fn({ getConfig });\n\t\t\treturn RunResult.pass({ name, filename });\n\t\t}\n\t\tcatch (error) {\n\t\t\treturn RunResult.fail({ name, filename, error, renderError });\n\t\t}\n\t}, async () => {\n\t\treturn await RunResult.timeout({ name, filename, timeout });\n\t});\n}\n\nfunction isSuccess(result: TestCaseResult | RunResult) {\n\treturn result.status === TestStatus.pass || result.status === TestStatus.skip;\n}\n\n\n/** Internal use only. */\nexport async function importRendererAsync(renderer?: string) {\n\tif (renderer === undefined) return undefined;\n\n\ttry {\n\t\tconst { renderError } = await import(renderer);\n\t\tif (renderError === undefined) {\n\t\t\tthrow new Error(`Renderer module doesn't export a renderError() function: ${renderer}`);\n\t\t}\n\t\tif (typeof renderError !== \"function\") {\n\t\t\tthrow new Error(\n\t\t\t\t`Renderer module's 'renderError' export must be a function, but it was a ${typeof renderError}: ${renderer}`\n\t\t\t);\n\t\t}\n\t\treturn renderError;\n\t}\n\tcatch(err) {\n\t\tif (typeof err !== \"object\" || (err as { code: string })?.code !== \"ERR_MODULE_NOT_FOUND\") throw err;\n\t\tthrow new Error(`Renderer module not found (did you forget to use an absolute path?): ${renderer}`);\n\t}\n}"],"names":["ensure","Clock","RunResult","TestCaseResult","TestMark","TestStatus","TestSuiteResult","path","DEFAULT_TIMEOUT_IN_MS","TestSuite","_name","_mark","_tests","_hasDotOnlyChildren","_allChildrenSkipped","_beforeAll","_afterAll","_beforeEach","_afterEach","_timeout","_filename","fromModulesAsync","moduleFilenames","signature","arguments","Array","suites","Promise","all","map","filename","loadModuleAsync","none","tests","errorName","basename","isAbsolute","createFailure","default","suite","_setFilename","err","code","name","error","FailureTestCase","create","nameOrOptionsOrDescribeFn","optionsOrDescribeFn","possibleDescribeFn","mark","testContext","DescribeOptionsType","timeout","Number","undefined","String","Function","options","fn","decipherOverloadedParameters","only","skip","unreachable","that","describeFn","beforeAll","afterAll","beforeEach","afterEach","push","describe","optionalName","optionalOptions","it","testCaseFn","TestCase","defineBeforeAfterFn","pop","beforeAfterArray","optionsOrFnAsync","possibleFnAsync","fnAsync","constructor","some","test","_isDotOnly","every","_isSkipped","runAsync","config","onTestCaseResult","renderer","clock","Object","_recursiveRunAsync","renderError","importRendererAsync","parentMark","parentBeforeEach","parentAfterEach","runOptions","resultOptions","beforeAllResults","beforeAllFailed","before","length","runTestFnAsync","result","isSuccess","inheritedMark","forEach","i","number","testResults","afterAllResults","after","_testFn","optionsOrTestFn","possibleTestFn","testFn","skipTest","defined","fail","_error","beforeEachFns","afterEachFns","testTimeout","getConfig","Error","timeoutAsync","pass","status"],"mappings":"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"}