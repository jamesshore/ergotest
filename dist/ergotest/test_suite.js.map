{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/test_suite.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\n\nimport * as ensure from \"../util/ensure.js\";\nimport { Clock } from \"../infrastructure/clock.js\";\nimport {\n\tRenderErrorFn,\n\tTestCaseResult,\n\tTestMark,\n\tTestMarkValue,\n\tTestResult,\n\tTestStatus,\n\tTestSuiteResult,\n} from \"./test_result.js\";\nimport path from \"node:path\";\n\nconst DEFAULT_TIMEOUT_IN_MS = 2000;\n\nexport interface TestConfig {\n\t[name: string]: unknown,\n}\n\nexport interface TestOptions {\n\ttimeout?: Milliseconds,\n\tconfig?: TestConfig,\n\tonTestCaseResult?: (testCaseResult: TestCaseResult) => void,\n\trenderer?: string,\n\tclock?: Clock,\n}\n\nexport interface DescribeOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport interface ItOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport type DescribeFn = () => void;\n\nexport type ItFn = (testUtilities: TestParameters) => Promise<void> | void;\n\ntype BeforeAfter = (optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) => void;\n\ntype BeforeAfterDefinition = { options: ItOptions, fnAsync: ItFn };\n\ninterface TestParameters {\n\tgetConfig: <T>(key: string) => T,\n}\n\ntype Milliseconds = number;\n\ninterface RecursiveRunOptions {\n\tname: string[];\n\tfilename?: string;\n\tclock: Clock,\n\tonTestCaseResult: (testResult: TestCaseResult) => void,\n\ttimeout: Milliseconds,\n\tconfig: TestConfig,\n\trenderError?: RenderErrorFn,\n}\n\ninterface Test {\n\t_recursiveRunAsync: (\n\t\tparentMark: TestMarkValue,\n\t\tparentBeforeEachFns: BeforeAfterDefinition[],\n\t\tparentAfterEachFns: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t) => Promise<TestResult> | TestResult;\n\t_isDotOnly: () => boolean,\n\t_isSkipped: (mark: TestMarkValue) => boolean,\n}\n\nexport interface TestContext {\n\tdescribe(\n\t\toptionalName: string | DescribeOptions | DescribeFn | undefined,\n\t\toptionalOptions: DescribeOptions | DescribeFn | undefined,\n\t\tdescribeFn: DescribeFn | undefined,\n\t\tmark: TestMarkValue,\n\t): TestSuite,\n\tit(\n\t\tname: string,\n\t\toptionalOptions: ItOptions | ItFn | undefined,\n\t\titFn: ItFn | undefined,\n\t\tmark: TestMarkValue,\n\t): void;\n\tbeforeAll: BeforeAfter,\n\tafterAll: BeforeAfter,\n\tbeforeEach: BeforeAfter,\n\tafterEach: BeforeAfter,\n}\n\n/**\n * A simple but full-featured test runner.\n */\nexport class TestSuite implements Test {\n\n\tprivate _name: string;\n\tprivate _mark: TestMarkValue;\n\tprivate _tests: Test[];\n\tprivate _hasDotOnlyChildren: boolean;\n\tprivate _allChildrenSkipped: boolean;\n\tprivate _beforeAllFns: BeforeAfterDefinition[];\n\tprivate _afterAllFns: BeforeAfterDefinition[];\n\tprivate _beforeEachFns: BeforeAfterDefinition[];\n\tprivate _afterEachFns: BeforeAfterDefinition[];\n\tprivate _timeout?: Milliseconds;\n\tprivate _filename?: string;\n\n\tstatic get DEFAULT_TIMEOUT_IN_MS() {\n\t\treturn DEFAULT_TIMEOUT_IN_MS;\n\t}\n\n\t/**\n\t * Convert a list of test modules into a test suite. Each module needs to export a test suite by using\n\t * {@link TestSuite.create}.\n\t * @param {string[]} moduleFilenames The filenames of the test modules.\n\t * @returns {TestSuite} The test suite.\n\t */\n\tstatic async fromModulesAsync(moduleFilenames: string[]): Promise<TestSuite> {\n\t\tensure.signature(arguments, [ Array ]);\n\n\t\tconst suites = await Promise.all(moduleFilenames.map(filename => loadModuleAsync(filename)));\n\t\treturn new TestSuite(\"\", TestMark.none, { tests: suites });\n\n\t\tasync function loadModuleAsync(filename: string): Promise<TestSuite> {\n\t\t\tconst errorName = `error when importing ${path.basename(filename)}`;\n\n\t\t\tif (!path.isAbsolute(filename)) {\n\t\t\t\treturn createFailure(errorName, `Test module filenames must use absolute paths: ${filename}`);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst { default: suite } = await import(filename);\n\t\t\t\tif (suite instanceof TestSuite) {\n\t\t\t\t\tsuite._setFilename(filename);\n\t\t\t\t\treturn suite;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn createFailure(errorName, `Test module doesn't export a test suite: ${filename}`, filename);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(err) {\n\t\t\t\tconst code = (err as { code: string })?.code;\n\t\t\t\tif (code === \"ERR_MODULE_NOT_FOUND\") {\n\t\t\t\t\treturn createFailure(errorName, `Test module not found: ${filename}`, filename);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn createFailure(errorName, err, filename);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createFailure(name: string, error: unknown, filename?: string) {\n\t\t\treturn new TestSuite(\"\", TestMark.none, { tests: [ new FailureTestCase(name, error, filename) ] });\n\t\t}\n\t}\n\n\t/** Internal use only. */\n\tstatic create(\n\t\tnameOrOptionsOrDescribeFn: string | DescribeOptions | DescribeFn | undefined,\n\t\toptionsOrDescribeFn: DescribeOptions | DescribeFn | undefined,\n\t\tpossibleDescribeFn: DescribeFn | undefined,\n\t\tmark: TestMarkValue,\n\t\ttestContext: TestContext[],\n\t): TestSuite {\n\t\tconst DescribeOptionsType = { timeout: Number };\n\t\tensure.signature(arguments, [\n\t\t\t[ undefined, DescribeOptionsType, String, Function ],\n\t\t\t[ undefined, DescribeOptionsType, Function ],\n\t\t\t[ undefined, Function ],\n\t\t\tString,\n\t\t\tArray,\n\t\t]);\n\n\t\tconst { name, options, fn } = decipherOverloadedParameters();\n\n\t\tif (fn !== undefined) {\n\t\t\treturn this.#runDescribeFunction(fn, name, mark, testContext, options.timeout);\n\t\t}\n\t\telse if (mark === TestMark.only) {\n\t\t\treturn new TestSuite(name, mark, {\n\t\t\t\ttests: [ new FailureTestCase(name, \"Test suite is marked '.only', but it has no body\") ],\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\treturn new TestSuite(name, TestMark.skip, { timeout: options.timeout });\n\t\t}\n\n\t\tfunction decipherOverloadedParameters() {\n\t\t\tlet name: string;\n\t\t\tlet options: DescribeOptions | undefined;\n\t\t\tlet fn: DescribeFn | undefined;\n\n\t\t\tswitch (typeof nameOrOptionsOrDescribeFn) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tname = nameOrOptionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"object\":\n\t\t\t\t\toptions = nameOrOptionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tfn = nameOrOptionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"undefined\":\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tensure.unreachable(`Unknown typeof for nameOrOptionsOrSuiteFn: ${typeof nameOrOptionsOrDescribeFn}`);\n\t\t\t}\n\t\t\tswitch (typeof optionsOrDescribeFn) {\n\t\t\t\tcase \"object\":\n\t\t\t\t\tensure.that(options === undefined, \"Received two options parameters\");\n\t\t\t\t\toptions = optionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tensure.that(fn === undefined, \"Received two suite function parameters\");\n\t\t\t\t\tfn = optionsOrDescribeFn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"undefined\":\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tensure.unreachable(`Unknown typeof for optionsOrSuiteFn: ${typeof optionsOrDescribeFn}`);\n\t\t\t}\n\t\t\tif (possibleDescribeFn !== undefined) {\n\t\t\t\tensure.that(fn === undefined, \"Received two suite function parameters\");\n\t\t\t\tfn = possibleDescribeFn;\n\t\t\t}\n\n\t\t\tname ??= \"\";\n\t\t\toptions ??= {};\n\n\t\t\treturn { name, options, fn };\n\t\t}\n\t}\n\n\tstatic #runDescribeFunction(\n\t\tdescribeFn: DescribeFn,\n\t\tname: string,\n\t\tmark: TestMarkValue,\n\t\ttestContext: TestContext[],\n\t\ttimeout?: Milliseconds,\n\t): TestSuite {\n\t\tconst tests: Test[] = [];\n\t\tconst beforeAllFns: BeforeAfterDefinition[] = [];\n\t\tconst afterAllFns: BeforeAfterDefinition[] = [];\n\t\tconst beforeEachFns: BeforeAfterDefinition[] = [];\n\t\tconst afterEachFns: BeforeAfterDefinition[] = [];\n\n\t\ttestContext.push({\n\t\t\tdescribe(optionalName, optionalOptions, fn, mark) {\n\t\t\t\tconst suite = TestSuite.create(optionalName, optionalOptions, fn, mark, testContext);\n\t\t\t\ttests.push(suite);\n\t\t\t\treturn suite;\n\t\t\t},\n\t\t\tit(name, optionalOptions, testCaseFn, mark) {\n\t\t\t\ttests.push(TestCase.create(name, optionalOptions, testCaseFn, mark));\n\t\t\t},\n\t\t\tbeforeAll: defineBeforeAfterFn(beforeAllFns),\n\t\t\tafterAll: defineBeforeAfterFn(afterAllFns),\n\t\t\tbeforeEach: defineBeforeAfterFn(beforeEachFns),\n\t\t\tafterEach: defineBeforeAfterFn(afterEachFns),\n\t\t});\n\n\t\ttry {\n\t\t\tdescribeFn();\n\t\t}\n\t\tfinally {\n\t\t\ttestContext.pop();\n\t\t}\n\n\t\treturn new TestSuite(name, mark, { tests, beforeAllFns, afterAllFns, beforeEachFns, afterEachFns, timeout });\n\n\t\tfunction defineBeforeAfterFn(beforeAfterArray: BeforeAfterDefinition[]) {\n\t\t\treturn function (optionsOrFnAsync: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\t\t\t\tensure.signature(arguments, [\n\t\t\t\t\t[ { timeout: Number }, Function ],\n\t\t\t\t\t[ undefined, Function ],\n\t\t\t\t]);\n\n\t\t\t\tlet options: ItOptions;\n\t\t\t\tlet fnAsync: ItFn;\n\n\t\t\t\tif (possibleFnAsync === undefined) {\n\t\t\t\t\toptions = {};\n\t\t\t\t\tfnAsync = optionsOrFnAsync as ItFn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toptions = optionsOrFnAsync as ItOptions;\n\t\t\t\t\tfnAsync = possibleFnAsync;\n\t\t\t\t}\n\n\t\t\t\tbeforeAfterArray.push({ options, fnAsync });\n\t\t\t};\n\t\t}\n\t}\n\n\t/** Internal use only. (Use {@link describe} or {@link TestSuite.fromModulesAsync} instead.) */\n\tconstructor(name: string, mark: TestMarkValue, {\n\t\ttests = [],\n\t\tbeforeAllFns = [],\n\t\tafterAllFns = [],\n\t\tbeforeEachFns = [],\n\t\tafterEachFns = [],\n\t\ttimeout,\n\t}: {\n\t\ttests?: Test[],\n\t\tbeforeAllFns?: BeforeAfterDefinition[],\n\t\tafterAllFns?: BeforeAfterDefinition[],\n\t\tbeforeEachFns?: BeforeAfterDefinition[],\n\t\tafterEachFns?: BeforeAfterDefinition[],\n\t\ttimeout?: Milliseconds,\n\t}) {\n\t\tthis._name = name;\n\t\tthis._mark = mark;\n\t\tthis._tests = tests;\n\t\tthis._hasDotOnlyChildren = this._tests.some(test => test._isDotOnly());\n\t\tthis._allChildrenSkipped = this._tests.every(test => test._isSkipped(this._mark));\n\t\tthis._beforeAllFns = beforeAllFns;\n\t\tthis._afterAllFns = afterAllFns;\n\t\tthis._beforeEachFns = beforeEachFns;\n\t\tthis._afterEachFns = afterEachFns;\n\t\tthis._timeout = timeout;\n\t}\n\n\t/**\n\t * Run the tests in this suite.\n\t * @param {number} [timeout] Default timeout in milliseconds.\n\t * @param {object} [config={}] Configuration data to provide to tests.\n\t * @param {(result: TestResult) => ()} [onTestCaseResult] A function to call each time a test completes. The `result`\n\t *   parameter describes the result of the test—whether it passed, failed, etc.\n\t * @param {string} [renderer] Path to a module that exports a `renderError()` function with the signature `(name:\n\t *   string, error: unknown, mark: TestMarkValue, filename?: string) => unknown`. The path must be an absolute path\n\t *   or a module that exists in `node_modules`. The `renderError()` function will be called when a test fails and the\n\t *   return value will be placed into the test result as {@link TestResult.errorRender}.\n\t * @param {Clock} [clock] Internal use only.\n\t * @returns {Promise<TestSuiteResult>} The results of the test suite.\n\t */\n\tasync runAsync({\n\t\ttimeout = DEFAULT_TIMEOUT_IN_MS,\n\t\tconfig = {},\n\t\tonTestCaseResult = () => {},\n\t\trenderer,\n\t\tclock = Clock.create(),\n\t}: TestOptions = {}): Promise<TestSuiteResult> {\n\t\tensure.signature(arguments, [[ undefined, {\n\t\t\ttimeout: [ undefined, Number ],\n\t\t\tconfig: [ undefined, Object ],\n\t\t\tonTestCaseResult: [ undefined, Function ],\n\t\t\trenderer: [ undefined, String ],\n\t\t\tclock: [ undefined, Clock ],\n\t\t}]]);\n\n\t\treturn await this._recursiveRunAsync(TestMark.only, [], [], {\n\t\t\tclock,\n\t\t\tconfig,\n\t\t\tonTestCaseResult,\n\t\t\tname: [],\n\t\t\tfilename: this._filename,\n\t\t\ttimeout: this._timeout ?? timeout ?? DEFAULT_TIMEOUT_IN_MS,\n\t\t\trenderError: await importRendererAsync(renderer),\n\t\t});\n\t}\n\n\t/** @private */\n\t_setFilename(filename: string) { this._filename = filename; }\n\n\t/** @private */\n\t_isDotOnly(): boolean {\n\t\treturn this._mark === TestMark.only || this._hasDotOnlyChildren;\n\t}\n\n\t/** @private */\n\t_isSkipped(): boolean {\n\t\treturn this._allChildrenSkipped;\n\t}\n\n\t/** @private */\n\tasync _recursiveRunAsync(\n\t\tparentMark: TestMarkValue,\n\t\tparentBeforeEachFns: BeforeAfterDefinition[],\n\t\tparentAfterEachFns: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t) {\n\t\tconst name = [ ...options.name ];\n\t\tif (this._name !== \"\") name.push(this._name);\n\t\tconst filename = this._filename ?? options.filename;\n\t\tconst timeout = this._timeout ?? options.timeout;\n\t\toptions = { ...options, name, filename, timeout };\n\n\t\tlet myMark = this._mark;\n\t\tif (myMark === TestMark.none) myMark = parentMark;\n\t\tif (myMark === TestMark.only && this._hasDotOnlyChildren) myMark = TestMark.skip;\n\n\t\tconst beforeEachFns = [ ...parentBeforeEachFns, ...this._beforeEachFns ];\n\t\tconst afterEachFns = [ ...this._afterEachFns, ...parentAfterEachFns ];\n\n\t\tif (!this._allChildrenSkipped) {\n\t\t\tconst beforeResult = await runBeforeOrAfterFnsAsync(\n\t\t\t\t[ ...options.name, \"beforeAll()\" ], this._beforeAllFns, TestMark.none, options,\n\t\t\t);\n\t\t\tif (!isSuccess(beforeResult)) {\n\t\t\t\treturn TestResult.suite(options.name, [ beforeResult ], {\n\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\tmark: this._mark,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst results = [];\n\t\tfor await (const test of this._tests) {\n\t\t\tresults.push(await test._recursiveRunAsync(myMark, beforeEachFns, afterEachFns, options));\n\t\t}\n\n\t\tif (!this._allChildrenSkipped) {\n\t\t\tconst afterResult = await runBeforeOrAfterFnsAsync(\n\t\t\t\t[ ...options.name, \"afterAll()\" ], this._afterAllFns, TestMark.none, options\n\t\t\t);\n\t\t\tif (!isSuccess(afterResult)) results.push(afterResult);\n\t\t}\n\n\t\treturn TestResult.suite(options.name, results, {\n\t\t\tfilename: options.filename,\n\t\t\tmark: this._mark,\n\t\t});\n\t}\n\n}\n\n\nclass TestCase implements Test {\n\n\tprotected _name: string;\n\tprivate _timeout?: Milliseconds;\n\tprivate _testFn?: ItFn;\n\tprivate _mark: TestMarkValue;\n\n\tstatic create(\n\t\tname: string,\n\t\toptionsOrTestFn: TestOptions | ItFn | undefined,\n\t\tpossibleTestFn: ItFn | undefined,\n\t\tmark: TestMarkValue,\n\t) {\n\t\tensure.signature(arguments, [\n\t\t\tString,\n\t\t\t[ undefined, { timeout: [ undefined, Number ]}, Function ],\n\t\t\t[ undefined, Function ],\n\t\t\tString\n\t\t]);\n\n\t\tlet timeout;\n\t\tlet testFn;\n\n\t\tswitch (typeof optionsOrTestFn) {\n\t\t\tcase \"object\":\n\t\t\t\ttimeout = optionsOrTestFn.timeout;\n\t\t\t\tbreak;\n\t\t\tcase \"function\":\n\t\t\t\ttestFn = optionsOrTestFn;\n\t\t\t\tbreak;\n\t\t\tcase \"undefined\":\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tensure.unreachable(`Unknown typeof optionsOrTestFn: ${typeof optionsOrTestFn}`);\n\t\t}\n\t\tif (possibleTestFn !== undefined) {\n\t\t\tensure.that(testFn === undefined, \"Received two test function parameters\");\n\t\t\ttestFn = possibleTestFn;\n\t\t}\n\n\t\treturn new TestCase(name, timeout, testFn, mark);\n\t}\n\n\tconstructor(\n\t\tname: string,\n\t\ttimeout: Milliseconds | undefined,\n\t\ttestFn: ItFn | undefined,\n\t\tmark: TestMarkValue\n\t) {\n\t\tthis._name = name;\n\t\tthis._timeout = timeout;\n\t\tthis._testFn = testFn;\n\t\tthis._mark = mark;\n\t}\n\n\t/** @private */\n\t_isDotOnly(): boolean {\n\t\tensure.signature(arguments, []);\n\t\treturn this._mark === TestMark.only;\n\t}\n\n\t/** @private */\n\t_isSkipped(parentMark: TestMarkValue): boolean {\n\t\tconst inheritedMark = this._mark === TestMark.none ? parentMark : this._mark;\n\t\treturn inheritedMark === TestMark.skip;\n\t}\n\n\t/** @private */\n\tasync _recursiveRunAsync(\n\t\tparentMark: TestMarkValue,\n\t\tbeforeEachFns: BeforeAfterDefinition[],\n\t\tafterEachFns: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t): Promise<TestCaseResult> {\n\t\tconst name = [ ...options.name ];\n\t\tname.push(this._name !== \"\" ? this._name : \"(unnamed)\");\n\t\toptions = { ...options, name };\n\n\t\tlet result;\n\t\tif (this._testFn !== undefined) {\n\t\t\tif (!this._isSkipped(parentMark)) {\n\t\t\t\tresult = await runTestAsync(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = TestResult.skip(name, { filename: options.filename, mark: this._mark });\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._mark !== TestMark.only) {\n\t\t\t\tresult = TestResult.skip(name, { filename: options.filename, mark: TestMark.skip });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = TestResult.fail(\n\t\t\t\t\tname,\n\t\t\t\t\t\"Test is marked '.only', but it has no body\",\n\t\t\t\t\t{\n\t\t\t\t\t\trenderError: options.renderError,\n\t\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\t\tmark: this._mark,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\toptions.onTestCaseResult(result);\n\t\treturn result;\n\n\t\tasync function runTestAsync(self: TestCase): Promise<TestCaseResult> {\n\t\t\tconst beforeResult = await runBeforeOrAfterFnsAsync(options.name, beforeEachFns, self._mark, options);\n\t\t\tif (!isSuccess(beforeResult)) return beforeResult;\n\n\t\t\tconst itResult = await runTestFnAsync(options.name, self._testFn!, self._mark, self._timeout, options);\n\t\t\tconst afterResult = await runBeforeOrAfterFnsAsync(options.name, afterEachFns, self._mark, options);\n\n\t\t\tif (!isSuccess(itResult)) return itResult;\n\t\t\telse return afterResult;\n\t\t}\n\t}\n}\n\n\nclass FailureTestCase extends TestCase {\n\n\tprivate _filename?: string;\n\tprivate _error: unknown;\n\n\tconstructor(name: string, error: unknown, filename?: string) {\n\t\tsuper(name, undefined, undefined, TestMark.none);\n\n\t\tthis._filename = filename;\n\t\tthis._error = error;\n\t}\n\n\toverride async _recursiveRunAsync(\n\t\tparentMark: TestMarkValue,\n\t\tbeforeEachFns: BeforeAfterDefinition[],\n\t\tafterEachFns: BeforeAfterDefinition[],\n\t\toptions: RecursiveRunOptions,\n\t): Promise<TestCaseResult> {\n\t\tconst result = TestResult.fail([ this._name ], this._error, {\n\t\t\trenderError: options.renderError,\n\t\t\tfilename: this._filename,\n\t\t\tmark: TestMark.none,\n\t\t});\n\t\toptions.onTestCaseResult(result);\n\t\treturn await result;\n\t}\n\n}\n\n\nasync function runBeforeOrAfterFnsAsync(\n\tname: string[],\n\tbeforeAfterArray: BeforeAfterDefinition[],\n\tmark: TestMarkValue,\n\toptions: RecursiveRunOptions,\n): Promise<TestCaseResult> {\n\tfor await (const beforeAfter of beforeAfterArray) {\n\t\tconst result = await runTestFnAsync(name, beforeAfter.fnAsync, mark, beforeAfter.options.timeout, options);\n\t\tif (!isSuccess(result)) return result;\n\t}\n\treturn TestResult.pass(name, { filename: options.filename, mark });\n}\n\nasync function runTestFnAsync(\n\tname: string[],\n\tfn: ItFn,\n\tmark: TestMarkValue,\n\ttestTimeout: Milliseconds | undefined,\n\t{ clock, filename, timeout, config, renderError }: RecursiveRunOptions,\n): Promise<TestCaseResult> {\n\tconst getConfig = <T>(name: string) => {\n\t\tif (config[name] === undefined) throw new Error(`No test config found for name '${name}'`);\n\t\treturn config[name] as T;\n\t};\n\n\ttimeout = testTimeout ?? timeout;\n\n\treturn await clock.timeoutAsync(timeout, async () => {\n\t\ttry {\n\t\t\tawait fn({ getConfig });\n\t\t\treturn TestResult.pass(name, { filename, mark });\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn TestResult.fail(name, err, { filename, mark, renderError });\n\t\t}\n\t}, async () => {\n\t\treturn await TestResult.timeout(name, timeout, { filename, mark });\n\t});\n}\n\nfunction isSuccess(result: TestCaseResult) {\n\treturn result.status === TestStatus.pass || result.status === TestStatus.skip;\n}\n\n\n/** Internal use only. */\nexport async function importRendererAsync(renderer?: string) {\n\tif (renderer === undefined) return undefined;\n\n\ttry {\n\t\tconst { renderError } = await import(renderer);\n\t\tif (renderError === undefined) {\n\t\t\tthrow new Error(`Renderer module doesn't export a renderError() function: ${renderer}`);\n\t\t}\n\t\tif (typeof renderError !== \"function\") {\n\t\t\tthrow new Error(\n\t\t\t\t`Renderer module's 'renderError' export must be a function, but it was a ${typeof renderError}: ${renderer}`\n\t\t\t);\n\t\t}\n\t\treturn renderError;\n\t}\n\tcatch(err) {\n\t\tif (typeof err !== \"object\" || (err as { code: string })?.code !== \"ERR_MODULE_NOT_FOUND\") throw err;\n\t\tthrow new Error(`Renderer module not found (did you forget to use an absolute path?): ${renderer}`);\n\t}\n}\n"],"names":["ensure","Clock","TestMark","TestResult","TestStatus","path","DEFAULT_TIMEOUT_IN_MS","TestSuite","_name","_mark","_tests","_hasDotOnlyChildren","_allChildrenSkipped","_beforeAllFns","_afterAllFns","_beforeEachFns","_afterEachFns","_timeout","_filename","fromModulesAsync","moduleFilenames","signature","arguments","Array","suites","Promise","all","map","filename","loadModuleAsync","none","tests","errorName","basename","isAbsolute","createFailure","default","suite","_setFilename","err","code","name","error","FailureTestCase","create","nameOrOptionsOrDescribeFn","optionsOrDescribeFn","possibleDescribeFn","mark","testContext","DescribeOptionsType","timeout","Number","undefined","String","Function","options","fn","decipherOverloadedParameters","only","skip","unreachable","that","describeFn","beforeAllFns","afterAllFns","beforeEachFns","afterEachFns","push","describe","optionalName","optionalOptions","it","testCaseFn","TestCase","beforeAll","defineBeforeAfterFn","afterAll","beforeEach","afterEach","pop","beforeAfterArray","optionsOrFnAsync","possibleFnAsync","fnAsync","constructor","some","test","_isDotOnly","every","_isSkipped","runAsync","config","onTestCaseResult","renderer","clock","Object","_recursiveRunAsync","renderError","importRendererAsync","parentMark","parentBeforeEachFns","parentAfterEachFns","myMark","beforeResult","runBeforeOrAfterFnsAsync","isSuccess","results","afterResult","_testFn","optionsOrTestFn","possibleTestFn","testFn","inheritedMark","result","runTestAsync","fail","self","itResult","runTestFnAsync","_error","beforeAfter","pass","testTimeout","getConfig","Error","timeoutAsync","status"],"mappings":"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"}