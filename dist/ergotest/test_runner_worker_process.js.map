{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/test_runner_worker_process.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\nimport { importRendererAsync, TestSuite } from \"./test_suite.js\";\nimport { RunResult, TestCaseResult, TestMark, TestResult, TestSuiteResult } from \"./test_result.js\";\nimport { Clock } from \"../infrastructure/clock.js\";\nimport process from \"node:process\";\nimport { WorkerInput } from \"./test_runner.js\";\n\nconst KEEPALIVE_INTERVAL_IN_MS = 100;\n\nmain();\n\nfunction main() {\n\tconst cancelKeepAliveFn = Clock.create().repeat(KEEPALIVE_INTERVAL_IN_MS, () => {\n\t\tprocess.send!({ type: \"keepalive\" });\n\t});\n\n\tprocess.on(\"message\", (workerData) => {\n\t\trunWorkerAsync(cancelKeepAliveFn, workerData as WorkerInput);\n\t});\n\tprocess.on(\"error\", (err) => {\n\t\tif ((err as { code: string })?.code === \"ERR_IPC_CHANNEL_CLOSED\") {\n\t\t\tcancelKeepAliveFn();\n\t\t\tprocess.stdout.write(\n\t\t\t\t\"Ergotest worker process attempted to send message after IPC channel closed\\n\" +\n\t\t\t\t`Error: ${(err as Error)?.stack}`\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tsendFatalError(\"Ergotest worker process generated 'error' event\", err, cancelKeepAliveFn);\n\t\t}\n\t});\n}\n\nasync function runWorkerAsync(\n\tcancelKeepAliveFn: () => void,\n\t{ modulePaths, timeout, config, renderer }: WorkerInput\n) {\n\ttry {\n\t\tconst renderError = await importRendererAsync(renderer);\n\n\t\tprocess.on(\"uncaughtException\", (error) => {\n\t\t\tconst errorResult = TestSuiteResult.create({\n\t\t\t\ttests: [\n\t\t\t\t\tTestCaseResult.create({\n\t\t\t\t\t\tit: RunResult.fail({ name: \"Unhandled error in tests\", error, renderError }),\n\t\t\t\t\t})\n\t\t\t\t],\n\t\t\t});\n\t\t\tsendFinalResult(errorResult, cancelKeepAliveFn);\n\t\t});\n\n\t\tconst suite = await TestSuite.fromModulesAsync(modulePaths);\n\t\tconst result = await suite.runAsync({ timeout, config, renderer, onTestCaseResult: sendProgress });\n\n\t\t// wait a tick so unhandled promises can be detected\n\t\tsetImmediate(() => {\n\t\t\tsendFinalResult(result, cancelKeepAliveFn);\n\t\t});\n\t}\n\tcatch (err) {\n\t\tsendFatalError(\"Ergotest worker process encountered exception\", err, cancelKeepAliveFn);\n\t}\n}\n\nfunction sendProgress(result: TestCaseResult) {\n\tsend({\n\t\ttype: \"progress\",\n\t\tresult: result.serialize(),\n\t});\n}\n\nfunction sendFatalError(message: string, err: unknown, cancelKeepAliveFn: () => void) {\n\tcancelKeepAliveFn();\n\tsend({\n\t\ttype: \"fatal\",\n\t\tmessage,\n\t\terr,\n\t});\n}\n\nfunction sendFinalResult(result: TestSuiteResult, cancelKeepAliveFn: () => void) {\n\tcancelKeepAliveFn();\n\tsend({\n\t\ttype: \"complete\",\n\t\tresult: result.serialize(),\n\t});\n}\n\nfunction send(message: unknown) {\n\tprocess.send!(message);\n}"],"names":["importRendererAsync","TestSuite","RunResult","TestCaseResult","TestSuiteResult","Clock","process","KEEPALIVE_INTERVAL_IN_MS","main","cancelKeepAliveFn","create","repeat","send","type","on","workerData","runWorkerAsync","err","code","stdout","write","stack","sendFatalError","modulePaths","timeout","config","renderer","renderError","error","errorResult","tests","it","fail","name","sendFinalResult","suite","fromModulesAsync","result","runAsync","onTestCaseResult","sendProgress","setImmediate","serialize","message"],"mappings":"AAAA,iFAAiF;AACjF,SAASA,mBAAmB,EAAEC,SAAS,QAAQ,kBAAkB;AACjE,SAASC,SAAS,EAAEC,cAAc,EAAwBC,eAAe,QAAQ,mBAAmB;AACpG,SAASC,KAAK,QAAQ,6BAA6B;AACnD,OAAOC,aAAa,eAAe;AAGnC,MAAMC,2BAA2B;AAEjCC;AAEA,SAASA;IACR,MAAMC,oBAAoBJ,MAAMK,MAAM,GAAGC,MAAM,CAACJ,0BAA0B;QACzED,QAAQM,IAAI,CAAE;YAAEC,MAAM;QAAY;IACnC;IAEAP,QAAQQ,EAAE,CAAC,WAAW,CAACC;QACtBC,eAAeP,mBAAmBM;IACnC;IACAT,QAAQQ,EAAE,CAAC,SAAS,CAACG;QACpB,IAAI,AAACA,KAA0BC,SAAS,0BAA0B;YACjET;YACAH,QAAQa,MAAM,CAACC,KAAK,CACnB,iFACA,CAAC,OAAO,EAAGH,KAAeI,OAAO;QAEnC,OACK;YACJC,eAAe,mDAAmDL,KAAKR;QACxE;IACD;AACD;AAEA,eAAeO,eACdP,iBAA6B,EAC7B,EAAEc,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAe;IAEvD,IAAI;QACH,MAAMC,cAAc,MAAM3B,oBAAoB0B;QAE9CpB,QAAQQ,EAAE,CAAC,qBAAqB,CAACc;YAChC,MAAMC,cAAczB,gBAAgBM,MAAM,CAAC;gBAC1CoB,OAAO;oBACN3B,eAAeO,MAAM,CAAC;wBACrBqB,IAAI7B,UAAU8B,IAAI,CAAC;4BAAEC,MAAM;4BAA4BL;4BAAOD;wBAAY;oBAC3E;iBACA;YACF;YACAO,gBAAgBL,aAAapB;QAC9B;QAEA,MAAM0B,QAAQ,MAAMlC,UAAUmC,gBAAgB,CAACb;QAC/C,MAAMc,SAAS,MAAMF,MAAMG,QAAQ,CAAC;YAAEd;YAASC;YAAQC;YAAUa,kBAAkBC;QAAa;QAEhG,oDAAoD;QACpDC,aAAa;YACZP,gBAAgBG,QAAQ5B;QACzB;IACD,EACA,OAAOQ,KAAK;QACXK,eAAe,iDAAiDL,KAAKR;IACtE;AACD;AAEA,SAAS+B,aAAaH,MAAsB;IAC3CzB,KAAK;QACJC,MAAM;QACNwB,QAAQA,OAAOK,SAAS;IACzB;AACD;AAEA,SAASpB,eAAeqB,OAAe,EAAE1B,GAAY,EAAER,iBAA6B;IACnFA;IACAG,KAAK;QACJC,MAAM;QACN8B;QACA1B;IACD;AACD;AAEA,SAASiB,gBAAgBG,MAAuB,EAAE5B,iBAA6B;IAC9EA;IACAG,KAAK;QACJC,MAAM;QACNwB,QAAQA,OAAOK,SAAS;IACzB;AACD;AAEA,SAAS9B,KAAK+B,OAAgB;IAC7BrC,QAAQM,IAAI,CAAE+B;AACf"}