{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/runner/test_runner_worker_process.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\nimport { importRendererAsync } from \"../tests/test_suite.js\";\nimport { RunResult, TestCaseResult, TestSuiteResult } from \"../results/test_result.js\";\nimport { Clock } from \"../../infrastructure/clock.js\";\nimport process from \"node:process\";\nimport { WorkerInput } from \"./test_runner.js\";\nimport { fromModulesAsync } from \"./loader.js\";\n\nconst KEEPALIVE_INTERVAL_IN_MS = 100;\n\nmain();\n\nfunction main() {\n\tconst cancelKeepAliveFn = Clock.create().repeat(KEEPALIVE_INTERVAL_IN_MS, () => {\n\t\tprocess.send!({ type: \"keepalive\" });\n\t});\n\n\tprocess.on(\"message\", (workerData) => {\n\t\trunWorkerAsync(cancelKeepAliveFn, workerData as WorkerInput);\n\t});\n\tprocess.on(\"error\", (err) => {\n\t\tif ((err as { code: string })?.code === \"ERR_IPC_CHANNEL_CLOSED\") {\n\t\t\tcancelKeepAliveFn();\n\t\t\tprocess.stdout.write(\n\t\t\t\t\"Ergotest worker process attempted to send message after IPC channel closed\\n\" +\n\t\t\t\t`Error: ${(err as Error)?.stack}`\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tsendFatalError(\"Ergotest worker process generated 'error' event\", err, cancelKeepAliveFn);\n\t\t}\n\t});\n}\n\nasync function runWorkerAsync(\n\tcancelKeepAliveFn: () => void,\n\t{ modulePaths, timeout, config, renderer }: WorkerInput\n) {\n\ttry {\n\t\tconst renderError = await importRendererAsync(renderer);\n\n\t\tprocess.on(\"uncaughtException\", (error) => {\n\t\t\tconst testCaseResult = TestCaseResult.create({\n\t\t\t\tit: RunResult.fail({ name: [ \"Unhandled error in tests\" ], error, renderError }),\n\t\t\t});\n\t\t\tconst testSuiteResult = TestSuiteResult.create({\n\t\t\t\ttests: [ testCaseResult ],\n\t\t\t});\n\t\t\tsendProgress(testCaseResult);\n\t\t\tsendFinalResult(testSuiteResult, cancelKeepAliveFn);\n\t\t});\n\n\t\tconst suite = await fromModulesAsync(modulePaths);\n\t\tconst result = await suite.runAsync({ timeout, config, renderer, onTestCaseResult: sendProgress });\n\n\t\t// wait a tick so unhandled promises can be detected\n\t\tsetImmediate(() => {\n\t\t\tsendFinalResult(result, cancelKeepAliveFn);\n\t\t});\n\t}\n\tcatch (err) {\n\t\tsendFatalError(\"Ergotest worker process encountered exception\", err, cancelKeepAliveFn);\n\t}\n}\n\nfunction sendProgress(result: TestCaseResult) {\n\tsend({\n\t\ttype: \"progress\",\n\t\tresult: result.serialize(),\n\t});\n}\n\nfunction sendFatalError(message: string, err: unknown, cancelKeepAliveFn: () => void) {\n\tcancelKeepAliveFn();\n\tsend({\n\t\ttype: \"fatal\",\n\t\tmessage,\n\t\terr,\n\t});\n}\n\nfunction sendFinalResult(result: TestSuiteResult, cancelKeepAliveFn: () => void) {\n\tcancelKeepAliveFn();\n\tsend({\n\t\ttype: \"complete\",\n\t\tresult: result.serialize(),\n\t});\n}\n\nfunction send(message: unknown) {\n\tprocess.send!(message);\n}"],"names":["importRendererAsync","RunResult","TestCaseResult","TestSuiteResult","Clock","process","fromModulesAsync","KEEPALIVE_INTERVAL_IN_MS","main","cancelKeepAliveFn","create","repeat","send","type","on","workerData","runWorkerAsync","err","code","stdout","write","stack","sendFatalError","modulePaths","timeout","config","renderer","renderError","error","testCaseResult","it","fail","name","testSuiteResult","tests","sendProgress","sendFinalResult","suite","result","runAsync","onTestCaseResult","setImmediate","serialize","message"],"mappings":"AAAA,iFAAiF;AACjF,SAASA,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,SAAS,EAAEC,cAAc,EAAEC,eAAe,QAAQ,4BAA4B;AACvF,SAASC,KAAK,QAAQ,gCAAgC;AACtD,OAAOC,aAAa,eAAe;AAEnC,SAASC,gBAAgB,QAAQ,cAAc;AAE/C,MAAMC,2BAA2B;AAEjCC;AAEA,SAASA;IACR,MAAMC,oBAAoBL,MAAMM,MAAM,GAAGC,MAAM,CAACJ,0BAA0B;QACzEF,QAAQO,IAAI,CAAE;YAAEC,MAAM;QAAY;IACnC;IAEAR,QAAQS,EAAE,CAAC,WAAW,CAACC;QACtBC,eAAeP,mBAAmBM;IACnC;IACAV,QAAQS,EAAE,CAAC,SAAS,CAACG;QACpB,IAAI,AAACA,KAA0BC,SAAS,0BAA0B;YACjET;YACAJ,QAAQc,MAAM,CAACC,KAAK,CACnB,iFACA,CAAC,OAAO,EAAGH,KAAeI,OAAO;QAEnC,OACK;YACJC,eAAe,mDAAmDL,KAAKR;QACxE;IACD;AACD;AAEA,eAAeO,eACdP,iBAA6B,EAC7B,EAAEc,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAe;IAEvD,IAAI;QACH,MAAMC,cAAc,MAAM3B,oBAAoB0B;QAE9CrB,QAAQS,EAAE,CAAC,qBAAqB,CAACc;YAChC,MAAMC,iBAAiB3B,eAAeQ,MAAM,CAAC;gBAC5CoB,IAAI7B,UAAU8B,IAAI,CAAC;oBAAEC,MAAM;wBAAE;qBAA4B;oBAAEJ;oBAAOD;gBAAY;YAC/E;YACA,MAAMM,kBAAkB9B,gBAAgBO,MAAM,CAAC;gBAC9CwB,OAAO;oBAAEL;iBAAgB;YAC1B;YACAM,aAAaN;YACbO,gBAAgBH,iBAAiBxB;QAClC;QAEA,MAAM4B,QAAQ,MAAM/B,iBAAiBiB;QACrC,MAAMe,SAAS,MAAMD,MAAME,QAAQ,CAAC;YAAEf;YAASC;YAAQC;YAAUc,kBAAkBL;QAAa;QAEhG,oDAAoD;QACpDM,aAAa;YACZL,gBAAgBE,QAAQ7B;QACzB;IACD,EACA,OAAOQ,KAAK;QACXK,eAAe,iDAAiDL,KAAKR;IACtE;AACD;AAEA,SAAS0B,aAAaG,MAAsB;IAC3C1B,KAAK;QACJC,MAAM;QACNyB,QAAQA,OAAOI,SAAS;IACzB;AACD;AAEA,SAASpB,eAAeqB,OAAe,EAAE1B,GAAY,EAAER,iBAA6B;IACnFA;IACAG,KAAK;QACJC,MAAM;QACN8B;QACA1B;IACD;AACD;AAEA,SAASmB,gBAAgBE,MAAuB,EAAE7B,iBAA6B;IAC9EA;IACAG,KAAK;QACJC,MAAM;QACNyB,QAAQA,OAAOI,SAAS;IACzB;AACD;AAEA,SAAS9B,KAAK+B,OAAgB;IAC7BtC,QAAQO,IAAI,CAAE+B;AACf"}