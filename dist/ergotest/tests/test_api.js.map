{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/tests/test_api.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\nimport { RenderErrorFn, TestCaseResult, TestMark } from \"../results/test_result.js\";\nimport { Clock } from \"../../infrastructure/clock.js\";\nimport { TestConfig } from \"./test_suite.js\";\nimport { ApiContext } from \"./api_context.js\";\n\nconst context = new ApiContext();\n\n\nexport interface TestOptions {\n\ttimeout?: Milliseconds,\n\tconfig?: TestConfig,\n\tonTestCaseResult?: (testCaseResult: TestCaseResult) => void,\n\trenderer?: string,\n\tclock?: Clock,\n}\n\nexport type Milliseconds = number;\n\n\nexport interface DescribeOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport interface ItOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport type DescribeFn = () => void;\n\nexport type ItFn = (testUtilities: {\n\tgetConfig: <T>(key: string) => T,\n}) => Promise<void> | void;\n\n\n/**\n * Defines a test suite. Add `.skip` to skip this test suite and `.only` to only run this test suite.\n * @param {string} [optionalName] The name of the test suite. You can skip this parameter and pass\n *   {@link optionalOptions} or {@link fn} instead.\n * @param {DescribeOptions} [optionalOptions] The test suite options. You can skip this parameter and pass {@link fn}\n *   instead.\n * @param {function} [fn] The body of the test suite. In the body, call {@link describe}, {@link it}, {@link\n *   beforeAll}, {@link afterAll}, {@link beforeEach}, and {@link afterEach} to define the tests in the suite. If\n *   undefined, this test suite will be skipped.\n * @returns {TestSuite} The test suite. Youâ€™ll typically ignore the return value.\n */\nexport function describe(\n\toptionalName?: string | DescribeOptions | DescribeFn,\n\toptionalOptions?: DescribeOptions | DescribeFn,\n\tfn?: DescribeFn,\n) {\n\treturn context.describe(optionalName, optionalOptions, fn, TestMark.none);\n}\n\ndescribe.skip = function(\n\toptionalName?: string | DescribeOptions | DescribeFn,\n\toptionalOptions?: DescribeOptions | DescribeFn,\n\tfn?: DescribeFn,\n) {\n\treturn context.describe(optionalName, optionalOptions, fn, TestMark.skip);\n};\n\ndescribe.only = function(\n\toptionalName?: string | DescribeOptions | DescribeFn,\n\toptionalOptions?: DescribeOptions | DescribeFn,\n\tfn?: DescribeFn,\n) {\n\treturn context.describe(optionalName, optionalOptions, fn, TestMark.only);\n};\n\n/**\n * Adds a test to the current test suite. Must be run inside of a {@link test} or {@link describe} function. Add\n * `.skip` to skip this test and `.only` to only run this test.\n * @param {string} name The name of the test.\n * @param {ItOptions} [optionalOptions] The test options. You can skip this parameter and pass {@link fnAsync} instead.\n * @param {function} [fnAsync] The body of the test. May be synchronous or asynchronous. If undefined, this test will be\n *   skipped.\n */\nexport function it(name: string, optionalOptions?: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.it(name, optionalOptions, fnAsync, TestMark.none);\n}\n\nit.skip = function it(name: string, optionalOptions?: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.it(name, optionalOptions, fnAsync, TestMark.skip);\n};\n\nit.only = function it(name: string, optionalOptions?: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.it(name, optionalOptions, fnAsync, TestMark.only);\n};\n\n/**\n * Adds a function to run before all the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} fnAsync The function to run. May be synchronous or asynchronous.\n */\nexport function beforeAll(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.beforeAll(optionalOptions, fnAsync);\n}\n\n/**\n * Adds a function to run after all the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} [fnAsync] The function to run. May be synchronous or asynchronous.\n */\nexport function afterAll(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.afterAll(optionalOptions, fnAsync);\n}\n\n/**\n * Adds a function to run bfeore each of the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} [fnAsync] The function to run. May be synchronous or asynchronous.\n */\nexport function beforeEach(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.beforeEach(optionalOptions, fnAsync);\n}\n\n/**\n * Adds a function to run after each of the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} [fnAsync] The function to run. May be synchronous or asynchronous.\n */\nexport function afterEach(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\tcontext.afterEach(optionalOptions, fnAsync);\n}\n\n"],"names":["TestMark","ApiContext","context","describe","optionalName","optionalOptions","fn","none","skip","only","it","name","fnAsync","beforeAll","afterAll","beforeEach","afterEach"],"mappings":"AAAA,iFAAiF;AACjF,SAAwCA,QAAQ,QAAQ,4BAA4B;AAGpF,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,MAAMC,UAAU,IAAID;AA6BpB;;;;;;;;;;CAUC,GACD,OAAO,SAASE,SACfC,YAAoD,EACpDC,eAA8C,EAC9CC,EAAe;IAEf,OAAOJ,QAAQC,QAAQ,CAACC,cAAcC,iBAAiBC,IAAIN,SAASO,IAAI;AACzE;AAEAJ,SAASK,IAAI,GAAG,SACfJ,YAAoD,EACpDC,eAA8C,EAC9CC,EAAe;IAEf,OAAOJ,QAAQC,QAAQ,CAACC,cAAcC,iBAAiBC,IAAIN,SAASQ,IAAI;AACzE;AAEAL,SAASM,IAAI,GAAG,SACfL,YAAoD,EACpDC,eAA8C,EAC9CC,EAAe;IAEf,OAAOJ,QAAQC,QAAQ,CAACC,cAAcC,iBAAiBC,IAAIN,SAASS,IAAI;AACzE;AAEA;;;;;;;CAOC,GACD,OAAO,SAASC,GAAGC,IAAY,EAAEN,eAAkC,EAAEO,OAAc;IAClFV,QAAQQ,EAAE,CAACC,MAAMN,iBAAiBO,SAASZ,SAASO,IAAI;AACzD;AAEAG,GAAGF,IAAI,GAAG,SAASE,GAAGC,IAAY,EAAEN,eAAkC,EAAEO,OAAc;IACrFV,QAAQQ,EAAE,CAACC,MAAMN,iBAAiBO,SAASZ,SAASQ,IAAI;AACzD;AAEAE,GAAGD,IAAI,GAAG,SAASC,GAAGC,IAAY,EAAEN,eAAkC,EAAEO,OAAc;IACrFV,QAAQQ,EAAE,CAACC,MAAMN,iBAAiBO,SAASZ,SAASS,IAAI;AACzD;AAEA;;;;;;CAMC,GACD,OAAO,SAASI,UAAUR,eAAiC,EAAEO,OAAc;IAC1EV,QAAQW,SAAS,CAACR,iBAAiBO;AACpC;AAEA;;;;;;CAMC,GACD,OAAO,SAASE,SAAST,eAAiC,EAAEO,OAAc;IACzEV,QAAQY,QAAQ,CAACT,iBAAiBO;AACnC;AAEA;;;;;;CAMC,GACD,OAAO,SAASG,WAAWV,eAAiC,EAAEO,OAAc;IAC3EV,QAAQa,UAAU,CAACV,iBAAiBO;AACrC;AAEA;;;;;;CAMC,GACD,OAAO,SAASI,UAAUX,eAAiC,EAAEO,OAAc;IAC1EV,QAAQc,SAAS,CAACX,iBAAiBO;AACpC"}