{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/tests/test_case.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\nimport { RunResult, TestCaseResult, TestMark, TestMarkValue, TestStatus } from \"../results/test_result.js\";\nimport * as ensure from \"../../util/ensure.js\";\nimport { RunData, RunOptions } from \"./test_suite.js\";\nimport { Runnable } from \"./runnable.js\";\nimport { BeforeAfter } from \"./before_after.js\";\nimport { Test } from \"./test.js\";\nimport { ItFn, ItOptions } from \"./test_api.js\";\n\nexport class TestCase extends Runnable implements Test {\n\n\tprivate _mark: TestMarkValue;\n\n\tstatic create({\n\t\tname,\n\t\tmark = TestMark.none,\n\t\toptions = {},\n\t\tfnAsync = undefined,\n\t}: {\n\t\tname: string[],\n\t\tmark?: TestMarkValue,\n\t\toptions?: ItOptions,\n\t\tfnAsync?: ItFn,\n\t}): TestCase {\n\t\treturn new TestCase(name, options, fnAsync, mark);\n\t}\n\n\tconstructor(\n\t\tname: string[],\n\t\toptions: ItOptions,\n\t\tfnAsync: ItFn | undefined,\n\t\tmark: TestMarkValue\n\t) {\n\t\tsuper(name, options, fnAsync);\n\n\t\tthis._mark = mark;\n\t\tif (fnAsync === undefined && mark === TestMark.none) this._mark = TestMark.skip;\n\t}\n\n\t/** @private */\n\t_isDotOnly(): boolean {\n\t\tensure.signature(arguments, []);\n\t\treturn this._mark === TestMark.only;\n\t}\n\n\t/** @private */\n\t_isSkipped(parentMark: TestMarkValue): boolean {\n\t\tconst inheritedMark = this._mark === TestMark.none ? parentMark : this._mark;\n\t\treturn inheritedMark === TestMark.skip || this.fnAsync === undefined;\n\t}\n\n\t/** @private */\n\tasync _runAsyncInternal(\n\t\trunOptions: RunOptions,\n\t\tparentData: RunData,\n\t): Promise<TestCaseResult> {\n\t\tconst runData = this.#consolidateRunData(parentData);\n\n\t\tconst beforeEach = await this.#runBeforeAfterEachAsync(runData.beforeEach, true, runOptions, runData);\n\t\tconst it = await this.#runTestAsync(runData, runOptions);\n\t\tconst afterEach = await this.#runBeforeAfterEachAsync(runData.afterEach, false, runOptions, runData);\n\n\t\tconst result = TestCaseResult.create({ mark: this._mark, beforeEach, afterEach, it });\n\t\trunOptions.onTestCaseResult(result);\n\t\treturn result;\n\t}\n\n\tasync #runTestAsync(runData: RunData, runOptions: RunOptions) {\n\t\tif (this.fnAsync === undefined && this._mark === TestMark.only) {\n\t\t\treturn RunResult.fail({\n\t\t\t\tname: this.name,\n\t\t\t\tfilename: runData.filename,\n\t\t\t\terror: \"Test is marked '.only', but it has no body\",\n\t\t\t\trenderError: runOptions.renderError,\n\t\t\t});\n\t\t}\n\n\t\treturn await this._runTestFnAsync(runOptions, runData);\n\t}\n\n\tasync #runBeforeAfterEachAsync(\n\t\tbeforeAfter: BeforeAfter[],\n\t\tisBeforeEach: boolean,\n\t\trunOptions: RunOptions,\n\t\trunData: RunData\n\t) {\n\t\tconst results = [];\n\t\tfor await (const test of beforeAfter) {\n\t\t\tconst result = await test.runBeforeAfterEachAsync(runOptions, runData);\n\t\t\tif (isBeforeEach && !isSuccess(result)) runData.skipAll = true;\n\t\t\tresults.push(result);\n\t\t}\n\t\treturn results;\n\t}\n\n\t#consolidateRunData(parentData: RunData): RunData {\n\t\treturn {\n\t\t\tfilename: parentData.filename,\n\t\t\tmark: this._mark === TestMark.none ? parentData.mark : this._mark,\n\t\t\ttimeout: parentData.timeout,\n\t\t\tskipAll: parentData.skipAll || this._isSkipped(parentData.mark),\n\t\t\tbeforeEach: parentData.beforeEach,\n\t\t\tafterEach: parentData.afterEach,\n\t\t};\n\t}\n\n}\n\n\n\nfunction isSuccess(result: TestCaseResult | RunResult) {\n\treturn result.status === TestStatus.pass || result.status === TestStatus.skip;\n}\n\n\n\n\nexport class FailureTestCase extends TestCase {\n\n\tprivate _filename?: string;\n\tprivate _error: unknown;\n\n\tconstructor(name: string[], error: unknown, filename?: string) {\n\t\tsuper(name, {}, undefined, TestMark.none);\n\n\t\tthis._filename = filename;\n\t\tthis._error = error;\n\t}\n\n\toverride async _runAsyncInternal(\n\t\trunOptions: RunOptions,\n\t\tparentData: RunData,\n\t): Promise<TestCaseResult> {\n\t\tconst it = RunResult.fail({\n\t\t\tname: this.name,\n\t\t\tfilename: this._filename,\n\t\t\terror: this._error,\n\t\t\trenderError: runOptions.renderError,\n\t\t});\n\t\tconst result = TestCaseResult.create({ mark: TestMark.none, it });\n\n\t\trunOptions.onTestCaseResult(result);\n\t\treturn await result;\n\t}\n\n}"],"names":["RunResult","TestCaseResult","TestMark","TestStatus","ensure","Runnable","TestCase","_mark","create","name","mark","none","options","fnAsync","undefined","constructor","skip","_isDotOnly","signature","arguments","only","_isSkipped","parentMark","inheritedMark","_runAsyncInternal","runOptions","parentData","runData","beforeEach","it","afterEach","result","onTestCaseResult","fail","filename","error","renderError","_runTestFnAsync","beforeAfter","isBeforeEach","results","test","runBeforeAfterEachAsync","isSuccess","skipAll","push","timeout","status","pass","FailureTestCase","_filename","_error"],"mappings":"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"}