{"version":3,"sources":["/Users/jshore/Documents/Projects/ergotest/src/ergotest/test_api.ts"],"sourcesContent":["// Copyright Titanium I.T. LLC. License granted under terms of \"The MIT License.\"\nimport { TestMark, TestMarkValue } from \"./results/test_result.js\";\nimport * as ensure from \"../util/ensure.js\";\nimport { FailureTestCase, TestCase } from \"./suite/test_case.js\";\nimport { Milliseconds, Test } from \"./suite/test.js\";\nimport { TestSuite } from \"./suite/test_suite.js\";\nimport { BeforeAfter } from \"./suite/before_after.js\";\n\nexport interface DescribeOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport interface ItOptions {\n\ttimeout?: Milliseconds,\n}\n\nexport type DescribeFn = () => void;\n\nexport type ItFn = (testUtilities: TestParameters) => Promise<void> | void;\n\ninterface TestParameters {\n\tgetConfig: <T>(key: string) => T,\n}\n\n/**\n * Defines a test suite. Add `.skip` to skip this test suite and `.only` to only run this test suite.\n * @param {string} [optionalName] The name of the test suite. You can skip this parameter and pass\n *   {@link optionalOptions} or {@link fn} instead.\n * @param {DescribeOptions} [optionalOptions] The test suite options. You can skip this parameter and pass {@link fn}\n *   instead.\n * @param {function} [fn] The body of the test suite. In the body, call {@link describe}, {@link it}, {@link\n *   beforeAll}, {@link afterAll}, {@link beforeEach}, and {@link afterEach} to define the tests in the suite. If\n *   undefined, this test suite will be skipped.\n * @returns {TestSuite} The test suite. Youâ€™ll typically ignore the return value.\n */\nexport function describe(\n\toptionalName?: string | DescribeOptions | DescribeFn,\n\toptionalOptions?: DescribeOptions | DescribeFn,\n\tfn?: DescribeFn,\n) {\n\treturn testContext.describe(optionalName, optionalOptions, fn, TestMark.none);\n}\n\ndescribe.skip = function(\n\toptionalName?: string | DescribeOptions | DescribeFn,\n\toptionalOptions?: DescribeOptions | DescribeFn,\n\tfn?: DescribeFn,\n) {\n\treturn testContext.describe(optionalName, optionalOptions, fn, TestMark.skip);\n};\n\ndescribe.only = function(\n\toptionalName?: string | DescribeOptions | DescribeFn,\n\toptionalOptions?: DescribeOptions | DescribeFn,\n\tfn?: DescribeFn,\n) {\n\treturn testContext.describe(optionalName, optionalOptions, fn, TestMark.only);\n};\n\n/**\n * Adds a test to the current test suite. Must be run inside of a {@link test} or {@link describe} function. Add\n * `.skip` to skip this test and `.only` to only run this test.\n * @param {string} name The name of the test.\n * @param {ItOptions} [optionalOptions] The test options. You can skip this parameter and pass {@link fnAsync} instead.\n * @param {function} [fnAsync] The body of the test. May be synchronous or asynchronous. If undefined, this test will be\n *   skipped.\n */\nexport function it(name: string, optionalOptions?: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.it(name, optionalOptions, fnAsync, TestMark.none);\n}\n\nit.skip = function it(name: string, optionalOptions?: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.it(name, optionalOptions, fnAsync, TestMark.skip);\n};\n\nit.only = function it(name: string, optionalOptions?: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.it(name, optionalOptions, fnAsync, TestMark.only);\n};\n\n/**\n * Adds a function to run before all the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} fnAsync The function to run. May be synchronous or asynchronous.\n */\nexport function beforeAll(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.beforeAll(optionalOptions, fnAsync);\n}\n\n/**\n * Adds a function to run after all the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} [fnAsync] The function to run. May be synchronous or asynchronous.\n */\nexport function afterAll(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.afterAll(optionalOptions, fnAsync);\n}\n\n/**\n * Adds a function to run bfeore each of the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} [fnAsync] The function to run. May be synchronous or asynchronous.\n */\nexport function beforeEach(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.beforeEach(optionalOptions, fnAsync);\n}\n\n/**\n * Adds a function to run after each of the tests in the current test suite. Must be run inside of a {@link test} or\n * {@link describe} function.\n * @param {ItOptions} [optionalOptions] The before/after options. You can skip this parameter and pass @{link fnAsync}\n *   instead.\n * @param {function} [fnAsync] The function to run. May be synchronous or asynchronous.\n */\nexport function afterEach(optionalOptions: ItOptions | ItFn, fnAsync?: ItFn) {\n\ttestContext.afterEach(optionalOptions, fnAsync);\n}\n\n\nclass ContextStack {\n\tprivate readonly _context: TestSuiteBuilder[] = [];\n\n\tdescribe(\n\t\toptionalName: string | DescribeOptions | DescribeFn | undefined,\n\t\toptionalOptions: DescribeOptions | DescribeFn | undefined,\n\t\toptionalFn: DescribeFn | undefined,\n\t\tmark: TestMarkValue,\n\t) {\n\t\tconst DescribeOptionsType = { timeout: Number };\n\t\tensure.signature(arguments, [\n\t\t\t[ undefined, DescribeOptionsType, String, Function ],\n\t\t\t[ undefined, DescribeOptionsType, Function ],\n\t\t\t[ undefined, Function ],\n\t\t\tString,\n\t\t]);\n\t\tconst { name, options, fn } = decipherDescribeParameters(optionalName, optionalOptions, optionalFn);\n\t\tconst fullName = this.#fullName(name);\n\n\t\tconst suite = fn === undefined\n\t\t\t? createSkippedSuite(fullName, mark)\n\t\t\t: runDescribeBlock(this._context, fullName, mark, fn);\n\n\t\tif (this._context.length !== 0) this.#top.addSuite(suite);\n\t\treturn suite;\n\n\t\tfunction runDescribeBlock(context: TestSuiteBuilder[], fullName: string[], mark: TestMarkValue, fn: DescribeFn) {\n\t\t\tconst builder = new TestSuiteBuilder(fullName, mark, options.timeout);\n\t\t\tcontext.push(builder);\n\t\t\ttry {\n\t\t\t\tfn();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tcontext.pop();\n\t\t\t}\n\t\t\treturn builder.toTestSuite();\n\t\t}\n\n\t\tfunction createSkippedSuite(name: string[], mark: TestMarkValue) {\n\t\t\tif (mark === TestMark.only) {\n\t\t\t\treturn TestSuite.create({\n\t\t\t\t\tname,\n\t\t\t\t\tmark,\n\t\t\t\t\ttests: [ new FailureTestCase(name, \"Test suite is marked '.only', but it has no body\") ],\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn TestSuite.create({\n\t\t\t\t\tname,\n\t\t\t\t\tmark: TestMark.skip,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tit(\n\t\tname: string,\n\t\toptionalOptions: ItOptions | ItFn | undefined,\n\t\tpossibleFnAsync: ItFn | undefined,\n\t\tmark: TestMarkValue\n\t) {\n\t\tthis.#ensureInsideDescribe(\"it\");\n\t\tconst { options, fnAsync } = decipherItParameters(name, optionalOptions, possibleFnAsync);\n\t\tif (name === \"\") name = \"(unnamed)\";\n\n\t\tthis.#top.it(this.#fullName(name), mark, options, fnAsync);\n\t}\n\n\tbeforeAll(optionalOptions: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\t\tthis.#ensureInsideDescribe(\"beforeAll\");\n\t\tconst { options, fnAsync } = decipherBeforeAfterParameters(optionalOptions, possibleFnAsync);\n\n\t\tthis.#top.beforeAll(this.#fullName(), options, fnAsync);\n\t}\n\n\tafterAll(optionalOptions: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\t\tthis.#ensureInsideDescribe(\"afterAll\");\n\t\tconst { options, fnAsync } = decipherBeforeAfterParameters(optionalOptions, possibleFnAsync);\n\n\t\tthis.#top.afterAll(this.#fullName(), options, fnAsync);\n\t}\n\n\tbeforeEach(optionalOptions: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\t\tthis.#ensureInsideDescribe(\"beforeEach\");\n\t\tconst { options, fnAsync } = decipherBeforeAfterParameters(optionalOptions, possibleFnAsync);\n\n\t\tthis.#top.beforeEach(this.#fullName(), options, fnAsync);\n\t}\n\n\tafterEach(optionalOptions: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\t\tthis.#ensureInsideDescribe(\"afterEach\");\n\t\tconst { options, fnAsync } = decipherBeforeAfterParameters(optionalOptions, possibleFnAsync);\n\n\t\tthis.#top.afterEach(this.#fullName(), options, fnAsync);\n\t}\n\n\t#ensureInsideDescribe(functionName: string) {\n\t\tensure.that(this._context.length > 0, `${functionName}() must be run inside describe()`);\n\t}\n\n\tget #top() {\n\t\treturn this._context[this._context.length - 1];\n\t}\n\n\t#fullName(name = \"\") {\n\t\tconst topName = this._context.length === 0 ? [] : this.#top.name;\n\t\treturn name === \"\" ? topName : [ ...topName, name ];\n\t}\n\n}\n\nclass TestSuiteBuilder {\n\tprivate readonly _name: string[];\n\tprivate readonly _mark: TestMarkValue;\n\tprivate readonly _timeout?: Milliseconds;\n\tprivate readonly _tests: Test[] = [];\n\tprivate readonly _beforeAll: BeforeAfter[] = [];\n\tprivate readonly _afterAll: BeforeAfter[] = [];\n\tprivate readonly _beforeEach: BeforeAfter[] = [];\n\tprivate readonly _afterEach: BeforeAfter[] = [];\n\n\tconstructor(name: string[], mark: TestMarkValue, timeout?: Milliseconds) {\n\t\tthis._name = name;\n\t\tthis._mark = mark;\n\t\tthis._timeout = timeout;\n\t}\n\n\tpublic get name() {\n\t\treturn this._name;\n\t}\n\n\taddSuite(suite: TestSuite) {\n\t\tthis._tests.push(suite);\n\t}\n\n\tit(name: string[], mark: TestMarkValue, options: ItOptions, fnAsync?: ItFn) {\n\t\tthis._tests.push(TestCase.create({ name, mark, options, fnAsync }));\n\t}\n\n\tbeforeAll(parentName: string[], options: ItOptions, fnAsync: ItFn) {\n\t\tconst name = this.#beforeAfterName(parentName, this._beforeAll, \"beforeAll()\");\n\t\tthis._beforeAll.push(BeforeAfter.create({ name, options, fnAsync }));\n\t}\n\n\tafterAll(parentName: string[], options: ItOptions, fnAsync: ItFn) {\n\t\tconst name = this.#beforeAfterName(parentName, this._afterAll, \"afterAll()\");\n\t\tthis._afterAll.push(BeforeAfter.create({ name, options, fnAsync }));\n\t}\n\n\tbeforeEach(parentName: string[], options: ItOptions, fnAsync: ItFn) {\n\t\tconst name = this.#beforeAfterName(parentName, this._beforeEach, \"beforeEach()\");\n\t\tthis._beforeEach.push(BeforeAfter.create({ name, options, fnAsync }));\n\t}\n\n\tafterEach(parentName: string[], options: ItOptions, fnAsync: ItFn) {\n\t\tconst name = this.#beforeAfterName(parentName, this._afterEach, \"afterEach()\");\n\t\tthis._afterEach.push(BeforeAfter.create({ name, options, fnAsync }));\n\t}\n\n\ttoTestSuite(): TestSuite {\n\t\treturn TestSuite.create({\n\t\t\tname: this._name,\n\t\t\tmark: this._mark,\n\t\t\ttimeout: this._timeout,\n\t\t\tbeforeAll: this._beforeAll,\n\t\t\tafterAll: this._afterAll,\n\t\t\tbeforeEach: this._beforeEach,\n\t\t\tafterEach: this._afterEach,\n\t\t\ttests: this._tests,\n\t\t});\n\t}\n\n\t#beforeAfterName(parentName: string[], beforeAfterArray: BeforeAfter[], baseName: string) {\n\t\tconst number = beforeAfterArray.length === 0 ? \"\" : ` #${beforeAfterArray.length + 1}`;\n\t\treturn [ ...parentName, baseName + number];\n\t}\n}\n\nfunction decipherDescribeParameters(\n\tnameOrOptionsOrDescribeFn: string | DescribeOptions | DescribeFn | undefined,\n\toptionsOrDescribeFn: DescribeOptions | DescribeFn | undefined,\n\tpossibleDescribeFn: DescribeFn | undefined,\n) {\n\tlet name: string;\n\tlet options: DescribeOptions | undefined;\n\tlet fn: DescribeFn | undefined;\n\n\tswitch (typeof nameOrOptionsOrDescribeFn) {\n\t\tcase \"string\":\n\t\t\tname = nameOrOptionsOrDescribeFn;\n\t\t\tbreak;\n\t\tcase \"object\":\n\t\t\toptions = nameOrOptionsOrDescribeFn;\n\t\t\tbreak;\n\t\tcase \"function\":\n\t\t\tfn = nameOrOptionsOrDescribeFn;\n\t\t\tbreak;\n\t\tcase \"undefined\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tensure.unreachable(`Unknown typeof for nameOrOptionsOrSuiteFn: ${typeof nameOrOptionsOrDescribeFn}`);\n\t}\n\tswitch (typeof optionsOrDescribeFn) {\n\t\tcase \"object\":\n\t\t\tensure.that(options === undefined, \"Received two options parameters\");\n\t\t\toptions = optionsOrDescribeFn;\n\t\t\tbreak;\n\t\tcase \"function\":\n\t\t\tensure.that(fn === undefined, \"Received two suite function parameters\");\n\t\t\tfn = optionsOrDescribeFn;\n\t\t\tbreak;\n\t\tcase \"undefined\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tensure.unreachable(`Unknown typeof for optionsOrSuiteFn: ${typeof optionsOrDescribeFn}`);\n\t}\n\tif (possibleDescribeFn !== undefined) {\n\t\tensure.that(fn === undefined, \"Received two suite function parameters\");\n\t\tfn = possibleDescribeFn;\n\t}\n\n\tname ??= \"\";\n\toptions ??= {};\n\n\treturn { name, options, fn };\n}\n\nfunction decipherBeforeAfterParameters(optionalOptions: ItOptions | ItFn, possibleFnAsync?: ItFn) {\n\tensure.signature(arguments, [\n\t\t[ { timeout: Number }, Function ],\n\t\t[ undefined, Function ],\n\t]);\n\n\tlet options: ItOptions;\n\tlet fnAsync: ItFn;\n\n\tif (possibleFnAsync === undefined) {\n\t\toptions = {};\n\t\tfnAsync = optionalOptions as ItFn;\n\t}\n\telse {\n\t\toptions = optionalOptions as ItOptions;\n\t\tfnAsync = possibleFnAsync;\n\t}\n\n\treturn { options, fnAsync };\n}\n\nfunction decipherItParameters(\n\tname: string,\n\toptionsOrTestFn?: ItOptions | ItFn,\n\tpossibleTestFn?: ItFn,\n) {\n\tensure.signature(arguments, [\n\t\tString,\n\t\t[ undefined, { timeout: [ undefined, Number ]}, Function ],\n\t\t[ undefined, Function ],\n\t]);\n\n\tlet options = {};\n\tlet fnAsync;\n\n\tswitch (typeof optionsOrTestFn) {\n\t\tcase \"object\":\n\t\t\toptions = optionsOrTestFn;\n\t\t\tbreak;\n\t\tcase \"function\":\n\t\t\tfnAsync = optionsOrTestFn;\n\t\t\tbreak;\n\t\tcase \"undefined\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tensure.unreachable(`Unknown typeof optionsOrTestFn: ${typeof optionsOrTestFn}`);\n\t}\n\tif (possibleTestFn !== undefined) {\n\t\tensure.that(fnAsync === undefined, \"Received two test function parameters\");\n\t\tfnAsync = possibleTestFn;\n\t}\n\n\treturn { options, fnAsync };\n}\n\nconst testContext = new ContextStack();\n"],"names":["TestMark","ensure","FailureTestCase","TestCase","TestSuite","BeforeAfter","describe","optionalName","optionalOptions","fn","testContext","none","skip","only","it","name","fnAsync","beforeAll","afterAll","beforeEach","afterEach","ContextStack","_context","optionalFn","mark","DescribeOptionsType","timeout","Number","signature","arguments","undefined","String","Function","options","decipherDescribeParameters","fullName","suite","createSkippedSuite","runDescribeBlock","length","addSuite","context","builder","TestSuiteBuilder","push","pop","toTestSuite","create","tests","possibleFnAsync","decipherItParameters","decipherBeforeAfterParameters","functionName","that","topName","_name","_mark","_timeout","_tests","_beforeAll","_afterAll","_beforeEach","_afterEach","constructor","parentName","beforeAfterArray","baseName","number","nameOrOptionsOrDescribeFn","optionsOrDescribeFn","possibleDescribeFn","unreachable","optionsOrTestFn","possibleTestFn"],"mappings":"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"}